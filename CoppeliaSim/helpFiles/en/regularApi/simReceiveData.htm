<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simReceiveData</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<h1>Regular API function</h1>
<p class=subsectionBar><a name="simReceiveData" id="simReceiveData"></a>simReceiveData / sim.receiveData </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED.</td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=apiTableRightCSyn>simReceiveData(simInt dataHeader,const simChar* dataName,simInt antennaHandle,simInt index,simInt* dataLength,simInt* senderID,simInt* dataHeaderR,simChar** dataNameR)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCParam>C/C++<br>parameters</td> 
<td class=apiTableRightCParam>
<div><strong>dataHeader</strong>: number indicating who &quot;designed&quot; the communication message. Can also be -1, in which case messages with any dataHeader will be retrieved (not recommended, unless index is different from -1). </div>
<div><strong>dataName</strong>: name indicating the type of message. Can be nil, in which case messages with any dataName will be retrieved (not recommended, unless index is different from -1)<br>
</div>
<div><strong>antennaHandle</strong>: handle of the scene object that should operate as the antenna for this reception. If sim.handle_default is specified, a reception antenna at (0,0,0) is simulated.<br>
</div>
<div><strong>index</strong>: zero-based index of the message to read. If -1 is indicated, the first message that matches the dataHeader and dataName is read and removed. Otherwise messages are just read.<br>
</div>
<div><strong>dataLength</strong>: length of the received data (if returned pointer is not nullptr)<br>
</div>
<div><strong>senderID</strong>: identifier of the sender. Can be the handle of a script if the message was sent from a script, or can be 0 if the message was sent from the non-Lua API. Can be nullptr.<br>
</div>
<div><strong>dataHeaderR</strong>: dataHeader of the data that was read. Can be nullptr.</div>
<div><strong>dataNameR</strong>: dataName of the data that was read. Can be nullptr. The user is in charge of releasing the buffer with <a href="simReleaseBuffer.htm">simReleaseBuffer</a>(*dataNameR).<br>
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=apiTableRightCRet>
<div>pointer to the received data, or nullptr if no data is available or in case of an error. The user is in charge of releasing the returned buffer with <a href="simReleaseBuffer.htm">simReleaseBuffer</a>.<br>
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua<br>synopsis
</td> 
<td class=apiTableRightLSyn>string data,int senderID,int dataHeader,string dataName=sim.receiveData(int dataHeader=-1,string dataName=nil,int antennaHandle=sim.handle_self,int index=-1)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua<br>parameters</td> 
<td class=apiTableRightLParam>
<div><strong>dataHeader</strong>: number indicating who &quot;designed&quot; the communication message. Can also be -1, in which case messages with any dataHeader will be retrieved (not recommended, unless index is different from -1). This value can be omitted (-1 will be used).</div>
<div><strong>dataName</strong>: name indicating the type of message. Can be nil, in which case messages with any dataName will be retrieved (not recommended, unless index is different from -1). This value can be omitted (nill will be used)<br>
</div>
<div><strong>antennaHandle</strong>: handle of the scene object that should operate as the antenna for this reception. If sim.handle_default is specified, a reception antenna at (0,0,0) is simulated. If sim.handle_self is specified, the object associated with the current child script is used as the antenna. This value can be omitted (sim.handle_self will be used)<br>
</div>
<div><strong>index</strong>: zero-based index of the message to read. If -1 is indicated, the first message that matches the dataHeader and dataName is read and removed. Otherwise messages are just read. This value can be omitted (-1 will be used)</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua<br>return values
</td> 
<td class=apiTableRightLRet>
<div><strong>data</strong>: string containing the received data, or nil if no data is present. If received data is packed, see also the <a href="../apiFunctions.htm#packing">data packing/unpacking functions</a></div>
<div><strong>senderID</strong>: identifier of the sender. Can be the handle of a script if the message was sent from a script, or can be 0 if the message was sent from the non-Lua API.<br>
</div>
<div><strong>dataHeader</strong>: dataHeader of the data that was read.<br>
</div>
<div><strong>dataName</strong>: dataName of the data that was read.</div>
</td> 
</tr> 
</table> 


<br>
</td>
</tr>
</table>
</div>
</body>
</html>
