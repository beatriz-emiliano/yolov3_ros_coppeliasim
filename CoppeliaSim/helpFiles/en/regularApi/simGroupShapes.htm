<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simGroupShapes</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<h1>Regular API function</h1>
<p class=subsectionBar><a name="simGroupShapes" id="simGroupShapes"></a>simGroupShapes / sim.groupShapes </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Groups (or merges) several shapes into a <a href="../shapes.htm">compound shape</a> (or <a href="../shapes.htm">simple shape</a>). See also <a href="simUngroupShape.htm">sim.ungroupShape</a>.<br></td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=apiTableRightCSyn>simInt simGroupShapes(const simInt* shapeHandles,simInt shapeCount)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCParam>C/C++<br>parameters</td> 
<td class=apiTableRightCParam>
<div><strong>shapeHandles</strong>: the handles of the shapes to be grouped or merged. The last handle represents the shape that will accept the other shapes.</div>
<div><strong>shapeCount</strong>: the size of the <strong>shapeHandles</strong> array. A negative number indicates that we want to merge the shapes instead of grouping them.</div>
<div></div></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=apiTableRightCRet>
<div>-1 if operation was not successful. Otherwise the handle of the resulting compound shape, which is the last shape in shapeHandles.<br>
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua<br>synopsis
</td> 
<td class=apiTableRightLSyn>int shapeHandle=sim.groupShapes(int[] shapeHandles, bool merge=false) <br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua<br>parameters</td> 
<td class=apiTableRightLParam>
<div><strong>shapeHandles</strong>: the handles of the shapes to be grouped or merged. The last handle represents the shape that will accept the other shapes.</div>
<div><strong>merge</strong>: whether the shapes should be merged or grouped</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua<br>return values
</td> 
<td class=apiTableRightLRet>
<div>Similar to the C-function counterpart</div></td> 
</tr> 


<tr class=apiTableTr>
<td class=apiTableLeftPSyn>Python<br>synopsis</td>
<td class=apiTableRightPSyn>int shapeHandle=sim.groupShapes(list shapeHandles,bool merge=False)</td>
</tr>

</table> 

<br>
</td>
</tr>
</table>
</div>
</body>
</html>
