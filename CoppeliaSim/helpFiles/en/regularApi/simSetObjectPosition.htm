<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simSetObjectPosition</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<h1>Regular API function</h1>
<p class=subsectionBar><a name="simSetObjectPosition" id="simSetObjectPosition"></a>simSetObjectPosition / sim.setObjectPosition</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the position (x, y and z-coordinates) of an object. Dynamically simulated objects, together with their hierarchy tree, will be dynamically reset (this however does not apply to static shapes). See also <a href="simGetObjectPosition.htm">sim.getObjectPosition</a> and the section about <a href="../positionOrientationTransformation.htm">positions, orientations and transformations</a></td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=apiTableRightCSyn>simInt simSetObjectPosition(simInt objectHandle,simInt relativeToObjectHandle,const simFloat* position)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCParam>C/C++<br>parameters</td> 
<td class=apiTableRightCParam>
<div><strong>objectHandle</strong>: handle of the object. Can be combined with sim.handleflag_reljointbaseframe (see next argument)</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the position is specified. Specify sim.handle_world to set the absolute position, sim.handle_parent to set the position relative to the object's parent, or an object handle relative to whose reference frame the position is specified.  If this handle is the handle of a joint, then the position is applied relative to the joint's moving frame (unless <strong>objectHandle</strong> is combined with sim.handleflag_reljointbaseframe, in which case the position is applied relative to the joint's base frame).<br>
</div>
<div><strong>position</strong>: coordinates of the object</div>
<div></div></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=apiTableRightCRet>
<div>-1 if operation was not successful<br>
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua<br>synopsis
</td> 
<td class=apiTableRightLSyn>sim.setObjectPosition(int objectHandle,int relativeToObjectHandle,float[3] position)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua<br>parameters</td> 
<td class=apiTableRightLParam>
<div>Similar to the C-function counterpart</div>
<div></div></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua<br>return values
</td> 
<td class=apiTableRightLRet>
<div></div></td> 
</tr> 

 



<tr class=apiTableTr>
<td class=apiTableLeftPSyn>Python<br>synopsis</td>
<td class=apiTableRightPSyn>sim.setObjectPosition(int objectHandle,int relativeToObjectHandle,list position)</td>
</tr>

</table> 

<br>
</td>

</table>
</div>
</body>
</html>
