<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>sim.setThreadSwitchAllowed</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<h1>Regular API function</h1>
<p class=subsectionBar><a name="simSetThreadSwitchAllowed" id="simSetThreadSwitchAllowed"></a>sim.setThreadSwitchAllowed</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Lua only. Allows to temporarily forbid all thread interruptions, including explicit interruptions or switches. For complete control over thread switching, see also the other <a href="../apiFunctions.htm#threads">thread related functions</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=apiTableRightCSyn><div></div></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCParam>C/C++<br>parameters</td> 
<td class=apiTableRightCParam>
<div></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=apiTableRightCRet>
<div></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua<br>synopsis
</td> 
<td class=apiTableRightLSyn>int switchForbidLevel=sim.setThreadSwitchAllowed(bool allowSwitch / int forbidLevel)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua<br>parameters</td> 
<td class=apiTableRightLParam>
<div><strong>allowSwitch</strong>: if false, then the thread will not be interrupted anymore (i.e. thread switching will be temporarily disabled). Calling n times sim.setThreadSwitchAllowed(false) requires to call n times sim.setThreadSwitchAllowed(true) to restore the initial behaviour.</div>
<div><strong>forbidLevel</strong>: allows to set a switch forbid level: a level  &gt; 0 indicates that thread interruption is disabled.</div>
<div></div>
<div>Best is to always use following to temporarily forbid thread interruptions:</div>
<code class="hljs language-lua simple">
local initialForbidLevel=sim.setThreadSwitchAllowed(false) -- forbid thread switches
...
sim.setThreadSwitchAllowed(initialForbidLevel) -- restore to initial state</code>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua<br>return values
</td> 
<td class=apiTableRightLRet>
<div><strong>switchForbidLevel</strong>: the forbid switch level before calling the function, i.e. the forbid switch level that should be restored later on.</div></td> 
</tr> 


<tr class=apiTableTr>
<td class=apiTableLeftPSyn>Python<br>synopsis</td>
<td class=apiTableRightPSyn></td>
</tr>

</table> 

<br>
</td>
</tr>
</table>
</div>
</body>
</html>
