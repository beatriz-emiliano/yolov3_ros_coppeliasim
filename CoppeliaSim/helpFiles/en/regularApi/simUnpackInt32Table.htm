<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>simUnpackInt32Table</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<h1>Regular API function</h1>
<p class=subsectionBar><a name="simUnpackInt32Table" id="simUnpackInt32Table"></a>simUnpackInt32Table / sim.unpackInt32Table </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Unpacks a string (or part of it) into a table of int32 numbers. See also <a href="simPackInt32Table.htm">sim.packInt32Table</a> and the <a href="../apiFunctions.htm#packing">other packing/unpacking functions</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=apiTableRightCSyn><div></div></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCParam>C/C++<br>parameters</td> 
<td class=apiTableRightCParam>
<div></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=apiTableRightCRet>
<div></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua<br>synopsis
</td> 
<td class=apiTableRightLSyn>int[] int32Numbers=sim.unpackInt32Table(buffer data,int startInt32Index=0,int int32Count=0,int additionalByteOffset=0)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua<br>parameters</td> 
<td class=apiTableRightLParam>
<div><strong>data</strong>: a string (values between 0 and 255) that contains packed int32 numbers</div>
<div><strong>startInt32Index</strong>: the zero-based index from which on data should be unpacked (from data[4*startInt32Index+1+additionalByteOffset]). Can be omitted in which case 0 is used</div>
<div><strong>int32Count</strong>: the amount of int32s that should be unpacked. Can be omitted in which case 0 is used (which indicates that the maximum of int32s should be unpacked from the indicated startInt32Index)</div>
<div><strong>additionalByteOffset</strong>: a byte offset that will be added before reading the int32s. Can be omitted, in which case 0 is used.</div></td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua<br>return values
</td> 
<td class=apiTableRightLRet>
<div><strong>int32Numbers</strong>: a table containing unpacked int32 numbers</div>
</td> 
</tr> 


<tr class=apiTableTr>
<td class=apiTableLeftPSyn>Python<br>synopsis</td>
<td class=apiTableRightPSyn>list int32Numbers=sim.unpackInt32Table(bytes data,int startInt32Index=0,int int32Count=0,int additionalByteOffset=0)</td>
</tr>

</table> 

<br>
</td>
</tr>
</table>
</div>
</body>
</html>
