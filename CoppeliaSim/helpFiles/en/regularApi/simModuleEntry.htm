<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>sim.moduleEntry</title>
<link rel="stylesheet" type="text/css" href="../../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../../index.html" TARGET="_top"><img src="../images/homeImg.png"></a></p>

<h1>Regular API function</h1>
<p class=subsectionBar><a name="simModuleEntry" id="simModuleEntry"></a>simModuleEntry / sim.moduleEntry</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Creates, modifies or destroys module menu entries. Those are user selectable items located in [Menu bar --&gt; Modules]. When selected, the corresponding script will have its <a href="../callbackFunctions.htm#sysCall_moduleEntry">sysCall_moduleEntry</a> callback function triggered.</td>
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=apiTableRightCSyn>simInt simModuleEntry(simInt handle,const simChar* label,simInt state)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCParam>C/C++<br>parameters</td> 
<td class=apiTableRightCParam>
<div><strong>handle</strong>: the handle of a module menu entry, or -1 to create one.</div>
<div><strong>label</strong>: the label of the module entry. If handle is -1, then a path can be specified, in order to build sub-menus, e.g. &quot;Menu\nSubmenu1\nSubmenu2\nLabel&quot;. Can be nullptr if handle is not -1.</div>
<div><strong>state</strong>: Bit-coded: if bit0 is set (1), the item is enabled. If bit1 is set (2), the item is checked. If bit2 is set (4), the item is checkable.</div>
<div>Is ignored if set to -1. -2 will destroy an existing item.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=apiTableRightCRet>
<div>-1 if operation was not successful, otherwise the handle of the module menu entry.<br>
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLSyn>
Lua<br>synopsis
</td> 
<td class=apiTableRightLSyn>int handle=sim.moduleEntry(int handle,string label=nil,int state=-1)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLParam>Lua<br>parameters</td> 
<td class=apiTableRightLParam>
<div>Similar to the C-function counterpart</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=apiTableLeftLRet>
Lua<br>return values
</td> 
<td class=apiTableRightLRet>
<div>Similar to the C-function counterpart</div></td> 
</tr> 

 



<tr class=apiTableTr>
<td class=apiTableLeftPSyn>Python<br>synopsis</td>
<td class=apiTableRightPSyn>int handle=sim.moduleEntry(int handle,string label=None,int state=-1)</td>
</tr>

</table> 

<br>
</td>

</table>
</div>
</body>
</html>
