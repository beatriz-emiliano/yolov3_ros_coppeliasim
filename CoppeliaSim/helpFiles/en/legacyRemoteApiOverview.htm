<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Legacy remote API</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Legacy remote API</h1>

<p>The legacy remote API, is one of <a href="meansOfCommunication.htm">several ways an application can connect with CoppeliaSim</a>. It is <strong>deprecated</strong> as per CoppeliaSim V4.4, in favor of the <a href="zmqRemoteApiOverview.htm">ZeroMQ remote API</a>.</p>

<p>The  legacy remote API allows to control a simulation (or the simulator itself) from an external application or a remote hardware (e.g. real robot, remote computer, etc.). The CoppeliaSim legacy remote API is composed by <a href="remoteApiFunctionListAlphabetical.htm">approximately one hundred specific functions</a> and <a href="remoteApiFunctions.htm#simxCallScriptFunction">one generic function</a>, that can be called from a C/C++ application, a Python script, a Java application or a Matlab/Octave program. The legacy remote API functions are interacting with CoppeliaSim via socket communication (or, optionally, via shared memory). All this happens in a hidden fashion to the user. The legacy remote API can let one or several external applications interact with CoppeliaSim in a stepped  (i.e. <em>synchronized</em> with each simulation step) or non-stepped way (i.e. the normal operation mode), and even remote control of the simulator is supported (e.g. remotely loading a scene, starting, pausing or stopping a simulation for instance).</p>

<p>Make sure you understand how the legacy remote API is operating by reading <a href="remoteApiModusOperandi.htm">this section</a>.</p>

<p>The legacy remote API functionality comes in 2 separate entities, that are interacting via socket communication:</p>

<li><strong>the client side (i.e. your application)</strong>: the legacy remote API on the client side is available for many different programming languages: <a href="remoteApiFunctions.htm">C/C++</a>, <a href="remoteApiFunctionsPython.htm">Python</a>, <a href="remoteApiFunctionsJava.htm">Java</a>, <a href="remoteApiFunctionsMatlab.htm">Matlab</a> and <a href="remoteApiFunctionsOctave.htm">Octave</a>. <a href="remoteApiClientSide.htm">Instructions on how to enable the legacy remote API on the client side are given here</a>.</li>
<li><strong>the server side (i.e. CoppeliaSim)</strong>: the legacy remote API on the server side is implemented via a CoppeliaSim plugin that is loaded by CoppeliaSim by default: simExtRemoteApi.dll, libsimExtRemoteApi.dylib or libsimExtRemoteApi.so. The plugin project files are located <a href="https://github.com/CoppeliaRobotics/simExtRemoteApi" target="_blank">here</a>. <a href="remoteApiServerSide.htm">Instructions on how to enabled the legacy remote API on the server side are given here</a>.</li>

<br>
<br>
 </tr>
</table> 
</div>  
  
  
</body>

</html>