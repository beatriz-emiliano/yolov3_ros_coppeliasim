<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Object Parameter IDs</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td>
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Object Parameter IDs</h1>

<p>Refer to the API functions <a href="regularApi/simGetObjectInt32Param.htm">sim.getObjectInt32Param</a>, <a href="regularApi/simSetObjectInt32Param.htm">sim.setObjectInt32Param</a>, <a href="regularApi/simGetObjectFloatParam.htm">sim.getObjectFloatParam</a>, <a href="regularApi/simSetObjectFloatParam.htm">sim.setObjectFloatParam</a>, <a href="regularApi/simGetObjectStringParam.htm">sim.getObjectStringParam</a> and <a href="regularApi/simSetObjectStringParam.htm">sim.setObjectStringParam</a> for details on following values:<br>
</p>


<h2><a name="sceneObjects" id="sceneObjects"></a>Scene objects</h2>
<div class="constList">
<div>sim.objintparam_visibility_layer (10)</div>
<div class=tab>int32 parameter : object visibility layer</div>
<div>sim.objfloatparam_abs_x_velocity (11)</div><div class=tab>float parameter (can only be read) : object absolute x velocity. This is a calculated value. Refer also to <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>.</div>
<div>sim.objfloatparam_abs_y_velocity (12)</div><div class=tab>float parameter (can only be read) : object absolute y velocity. This is a calculated value. Refer also to <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>.</div>
<div>sim.objfloatparam_abs_z_velocity (13)</div><div class=tab>float parameter (can only be read) : object absolute z velocity. This is a calculated value. Refer also to <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>.</div>
<div>sim.objfloatparam_abs_rot_velocity (14)</div><div class=tab>float parameter (can only be read) : object absolute rotational velocity. This is a calculated value. Refer also to <a href="regularApi/simGetObjectVelocity.htm">sim.getObjectVelocity</a>.</div>

<div>sim.objfloatparam_objbbox_min_x (15)</div><div class=tab>float parameter (can only be read) : object bounding box, min. x position (relative to the object reference frame)</div>
<div>sim.objfloatparam_objbbox_min_y (16)</div><div class=tab>float parameter (can only be read) : object bounding box, min. y position (relative to the object reference frame)</div>
<div>sim.objfloatparam_objbbox_min_z (17)</div><div class=tab>float parameter (can only be read) : object bounding box, min. z position (relative to the object reference frame)</div>
<div>sim.objfloatparam_objbbox_max_x (18)</div><div class=tab>float parameter (can only be read) : object bounding box, max. x position (relative to the object reference frame)</div>
<div>sim.objfloatparam_objbbox_max_y (19)</div><div class=tab>float parameter (can only be read) : object bounding box, max. y position (relative to the object reference frame)</div>
<div>sim.objfloatparam_objbbox_max_z (20)</div><div class=tab>float parameter (can only be read) : object bounding box, max. z position (relative to the object reference frame)</div>

<div>sim.objfloatparam_modelbbox_min_x (21)</div><div class=tab>float parameter (can only be read) : model bounding box, min. x position (relative to the object reference frame). Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_min_y (22)</div><div class=tab>float parameter (can only be read) : model bounding box, min. y position (relative to the object reference frame). Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_min_z (23)</div><div class=tab>float parameter (can only be read) : model bounding box, min. z position (relative to the object reference frame). Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_max_x (24)</div><div class=tab>float parameter (can only be read) : model bounding box, max. x position (relative to the object reference frame). Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_max_y (25)</div><div class=tab>float parameter (can only be read) : model bounding box, max. y position (relative to the object reference frame). Object needs to be flagged as model base.</div>
<div>sim.objfloatparam_modelbbox_max_z (26)</div><div class=tab>float parameter (can only be read) : model bounding box, max. z position (relative to the object reference frame). Object needs to be flagged as model base.</div>

<div>sim.objintparam_collection_self_collision_indicator (27)</div><div class=tab>int32 parameter : collection self-collision indicator.</div>
<div>sim.objfloatparam_transparency_offset (28)</div><div class=tab>float parameter : transparent object distance offset. When rendering transparent objects, they are ordered from back to front for rendering. With this value you can influence the ordering a bit.</div>
<div>sim.objintparam_manipulation_permissions (31)</div><div class=tab>int32 parameter : object manipulation permissions, bit-coded: bit0 set (1) --> object can be translated during non-simulation, bit1 set (2) --> object can be translated during simulation, bit2 set (4) --> object can be rotated during non-simulation, bit3 set (8) --> object can be rotated during simulation, bit4 set (16) --&gt; object manual shift settings are locked, bit5 set (32) --&gt; object nanual rotation settings are locked.</div>
<div>sim.objintparam_illumination_handle (32)</div><div class=tab>int32 parameter : -1 if object should be illuminated by all light objects, otherwise a light handle (or collection handle) for the light object(s) that should illuminate the object.</div>
<div>sim.objfloatparam_size_factor (34)</div><div class=tab>float parameter : a size factor that will be automatically scaled when the object gets scaled.</div>
<div>sim.objstringparam_unique_id (35)</div><div class=tab>string parameter : a string that uniquely and persistently identifies an object. Can only be read.</div>
<div>sim.objintparam_visible (36)</div><div class=tab>int32 parameter : 0 if the shape is not visible. Can only be read.</div>

<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>



<h2><a name="visionSensors" id="visionSensors"></a>Vision sensors</h2>
<div class="constList">
<div>sim.visionfloatparam_near_clipping (1000)</div><div class=tab>float parameter : near clipping plane</div>
<div>sim.visionfloatparam_far_clipping (1001)</div><div class=tab>float parameter : far clipping plane</div>
<div>sim.visionintparam_resolution_x (1002)</div><div class=tab>int32 parameter : resolution x</div>
<div>sim.visionintparam_resolution_y (1003)</div><div class=tab>int32 parameter : resolution y</div>
<div>sim.visionfloatparam_perspective_angle (1004)</div><div class=tab>float parameter : perspective projection angle</div>
<div>sim.visionfloatparam_ortho_size (1005)</div><div class=tab>float parameter : orthographic projection size</div>
<div>sim.visionintparam_disabled_light_components (1006)</div><div class=tab>int32 parameter : mask of disabled light components (ambient, diffuse, specular)</div>
<div>sim.visionintparam_rendering_attributes (1007)</div><div class=tab>int32 parameter : a combination of <a href="apiConstants.htm#renderingAttributes">rendering attributes</a>. Use with care.</div>
<div>sim.visionintparam_entity_to_render (1008)</div><div class=tab>int32 parameter : entity handle of the entity to render, or -1 to render all renderable objects.</div>
<div>sim.visionintparam_windowed_size_x (1009)</div><div class=tab>int32 parameter : size X of external windowed rendering. 0 for full-screen.</div>
<div>sim.visionintparam_windowed_size_y (1010)</div><div class=tab>int32 parameter : size Y of external windowed rendering. 0 for full-screen.</div>
<div>sim.visionintparam_windowed_pos_x (1011)</div><div class=tab>int32 parameter : pos X of external windowed rendering.</div>
<div>sim.visionintparam_windowed_pos_y (1012)</div><div class=tab>int32 parameter : pos Y of external windowed rendering.</div>
<div>sim.visionintparam_pov_focal_blur (1013)</div><div class=tab>int32 parameter : POV-Ray focal blur enabled flag.</div>
<div>sim.visionfloatparam_pov_blur_distance (1014)</div><div class=tab>float parameter : POV-Ray focal blur distance.</div>
<div>sim.visionfloatparam_pov_aperture (1015)</div><div class=tab>float parameter : POV-Ray aperture.</div>
<div>sim.visionintparam_pov_blur_sampled (1016)</div><div class=tab>int32 parameter : POV-Ray blur samples.</div>
<div>sim.visionintparam_render_mode (1017)</div><div class=tab>int32 parameter : Render mode. Use with care. 0=normal, 1=aux. channels, 2=object handles, 3=POV-Ray.</div>
<div>sim.visionintparam_perspective_operation (1018)</div><div class=tab>int32 parameter : whether the vision sensor is operated in perspective mode (1) or orthogonal mode (0).</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>


<h2><a name="joints" id="joints"></a>Joints</h2>
<div class="constList">
<div>sim.jointfloatparam_pid_p (2002)</div><div class=tab>float parameter : dynamic motor position control P parameter</div>
<div>sim.jointfloatparam_pid_i (2003)</div><div class=tab>float parameter : dynamic motor position control I parameter</div>
<div>sim.jointfloatparam_pid_d (2004)</div><div class=tab>float parameter : dynamic motor position control D parameter</div>
<div>sim.jointfloatparam_intrinsic_x (2005)</div><div class=tab>float parameter (can only be read) : joint transformation, position X</div>
<div>sim.jointfloatparam_intrinsic_y (2006)</div><div class=tab>float parameter (can only be read) : joint transformation, position Y</div>
<div>sim.jointfloatparam_intrinsic_z (2007)</div><div class=tab>float parameter (can only be read) : joint transformation, position Z</div>
<div>sim.jointfloatparam_intrinsic_qx (2008)</div><div class=tab>float parameter (can only be read) : joint transformation, quaternion X</div>
<div>sim.jointfloatparam_intrinsic_qy (2009)</div><div class=tab>float parameter (can only be read) : joint transformation, quaternion Y</div>
<div>sim.jointfloatparam_intrinsic_qz (2010)</div><div class=tab>float parameter (can only be read) : joint transformation, quaternion Z</div>
<div>sim.jointfloatparam_intrinsic_qw (2011)</div><div class=tab>float parameter (can only be read) : joint transformation, quaternion W</div>
<div>sim.jointfloatparam_velocity (2012)</div><div class=tab>float parameter (can only be read) : joint velocity. This is a calculated value.</div>
<div>sim.jointfloatparam_spherical_qx (2013)</div><div class=tab>float parameter (can only be written) : spherical joint quaternion (X part). Value is buffered (quaternion will only be written when float parameter 2016 is written)</div>
<div>sim.jointfloatparam_spherical_qy (2014)</div><div class=tab>float parameter (can only be written) : spherical joint quaternion (Y part). Value is buffered (quaternion will only be written when float parameter 2016 is written)</div>
<div>sim.jointfloatparam_spherical_qz (2015)</div><div class=tab>float parameter (can only be written) : spherical joint quaternion (Z part). Value is buffered (quaternion will only be written when float parameter 2016 is written)</div>
<div>sim.jointfloatparam_spherical_qw (2016)</div><div class=tab>float parameter (can only be written) : spherical joint quaternion (W part). Writes a quaternion using also buffered values (see parameters 2013-2015)</div>
<div>sim.jointfloatparam_upper_limit (2017)</div><div class=tab>float parameter : joint upper velocity limit. May only have an effect after simulation restart, or after resetting the joint with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.jointfloatparam_kc_k (2018)</div><div class=tab>float parameter : dynamic motor spring control K parameter</div>
<div>sim.jointfloatparam_kc_c (2019)</div><div class=tab>float parameter : dynamic motor spring control C parameter</div>

<div>sim.jointfloatparam_error_x (2022)</div><div class=tab>float parameter : joint internal position error X (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_y (2023)</div><div class=tab>float parameter : joint internal position error Y (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_z (2024)</div><div class=tab>float parameter : joint internal position error Z (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_a (2025)</div><div class=tab>float parameter : joint internal orientation error alpha (euler(0)) (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_b (2026)</div><div class=tab>float parameter : joint internal orientation error beta (euler(1)) (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_g (2027)</div><div class=tab>float parameter : joint internal orientation error gamma (euler(2)) (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_pos (2028)</div><div class=tab>float parameter : joint internal position error (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointfloatparam_error_angle (2029)</div><div class=tab>float parameter : joint internal angular error (when joint is dynamically enabled). Can only be read.</div>
<div>sim.jointintparam_velocity_lock (2030)</div><div class=tab>int32 parameter : joint velocity lock mode enable state (when enabled and joint is in velocity mode and its target velocity is zero, then the joint is locked in place).</div>
<div>sim.jointintparam_vortex_dep_handle (2031)</div><div class=tab>int32 parameter : Vortex joint dependency, dependent joint handle. When written, the joint might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> for the change to take effect.</div>
<div>sim.jointfloatparam_vortex_dep_multiplication (2032)</div><div class=tab>float parameter : Vortex joint dependency, multiplication factor. When written, the joint might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> for the change to take effect.</div>
<div>sim.jointfloatparam_vortex_dep_offset (2033)</div><div class=tab>float parameter : Vortex joint dependency, offset. When written, the joint might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> for the change to take effect.</div>
<div>sim.jointfloatparam_screw_pitch (2034)</div><div class=tab>float parameter : the joint screw pitch, if the joint is a revolute joint.</div>
<div>sim.jointfloatparam_maxvel</div><div class=tab>float parameter: the maximum allowed velocity, when motion controlled</div>
<div>sim.jointfloatparam_maxaccel</div><div class=tab>float parameter: the maximum allowed acceleration, when motion controlled</div>
<div>sim.jointfloatparam_maxjerk</div><div class=tab>float parameter: the maximum allowed jerk, when motion controlled</div>
<div>sim.jointintparam_dynctrlmode</div>
<div class=tab>int32 parameter: the <a href="apiConstants.htm#ctrlModes">dynamic control mode of the join</a>t</div>
<div>sim.jointintparam_dynvelctrltype</div>
<div class=tab>int32 parameter: the dynamic velocity control type of the joint: 0=none, 1=motion profile</div>
<div>sim.jointintparam_dynposctrltype</div>
<div class=tab>int32 parameter: the dynamic position control type of the joint: 0=PID, 1=motion profile</div>

<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="shapes" id="shapes"></a>Shapes</h2>
<div class="constList">
<div>sim.shapefloatparam_init_velocity_x (3000)</div><div class=tab>float parameter : x-component of the initial dynamic linear velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapefloatparam_init_velocity_y (3001)</div><div class=tab>float parameter : y-component of the initial dynamic linear velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapefloatparam_init_velocity_z (3002)</div><div class=tab>float parameter : z-component of the initial dynamic linear velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapeintparam_static (3003)</div><div class=tab>int32 parameter : static state (0 or !=0). Use with care when setting this parameter during simulation (the shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a>)</div>
<div>sim.shapeintparam_respondable (3004)</div><div class=tab>int32 parameter : respondable state (0 or !=0). Use with care when setting this parameter during simulation (the shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a>)</div>
<div>sim.shapefloatparam_mass (3005)</div><div class=tab>float parameter : mass of the shape. Use with care when setting this parameter during simulation (the shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a>)</div>
<div>sim.shapefloatparam_texture_x (3006)</div><div class=tab>float parameter : texture x-coordinate. Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_y (3007)</div><div class=tab>float parameter : texture y-coordinate. Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_z (3008)</div><div class=tab>float parameter : texture z-coordinate. Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_a (3009)</div><div class=tab>float parameter : texture alpha-coordinate (<a href="positionOrientationTransformation.htm#euler">Euler angle</a>). Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_b (3010)</div><div class=tab>float parameter : texture beta-coordinate (<a href="positionOrientationTransformation.htm#euler">Euler angle</a>). Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_g (3011)</div><div class=tab>float parameter : texture gamma-coordinate (<a href="positionOrientationTransformation.htm#euler">Euler angle</a>). Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_scaling_x (3012)</div><div class=tab>float parameter : texture scaling along x. Has no effect when imported texture coordinates are used</div>
<div>sim.shapefloatparam_texture_scaling_y (3013)</div><div class=tab>float parameter : texture scaling along y. Has no effect when imported texture coordinates are used</div>
<div>sim.shapeintparam_culling (3014)</div><div class=tab>int32 parameter : culling state (0 or !=0)</div>
<div>sim.shapeintparam_wireframe (3015)</div><div class=tab>int32 parameter : wireframe state (0 or !=0)</div>
<div>sim.shapeintparam_compound (3016)</div><div class=tab>int32 parameter : shape compound state (0 if shape is a simple shape, !=0 if shape is a compound shape)</div>
<div>sim.shapeintparam_convex (3017)</div><div class=tab>int32 parameter : shape convex state (!=0 if shape mesh(es) is/are convex). This is just a flag. Very careful when setting this value (make sure the mesh(es) is/are closed and perfectly convex). The flag is used to select special and faster collision calculation routines for the physics engines. See also next item</div>
<div>sim.shapeintparam_convex_check (3018)</div><div class=tab>int32 parameter : triggers a convectivity check for the given shape. Can only be set (parameter can be any value). The shape's convex state will be set. Normally not needed because done automatically.</div>
<div>sim.shapeintparam_respondable_mask (3019)</div><div class=tab>int32 parameter : respondable mask. When setting this parameter during simulation (the shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a>)</div> 

<div>sim.shapefloatparam_init_velocity_a (3020)</div><div class=tab>float parameter : alpha-component of the initial dynamic angular velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapefloatparam_init_velocity_b (3021)</div><div class=tab>float parameter : beta-component of the initial dynamic angular velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapefloatparam_init_velocity_g (3022)</div><div class=tab>float parameter : gamma-component of the initial dynamic angular velocity of a dynamically enabled shape (static or non-static). The shape might have to be reset with <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a></div>
<div>sim.shapestringparam_color_name (3023)</div><div class=tab>string parameter : the color name(s) contained in the shape. If several color strings are contained, they are separated by a space character. You can use those strings to modify the color of a simple shape contained in a compound shape with <a href="regularApi/simSetShapeColor.htm">sim.setShapeColor</a>. This parameter can only be written for shapes that are not compound shapes.</div>
<div>sim.shapeintparam_edge_visibility (3024)</div><div class=tab>int32 parameter : edge visibility state (0 or !=0).</div>
<div>sim.shapefloatparam_shading_angle (3025)</div><div class=tab>float parameter : shading angle.</div>
<div>sim.shapefloatparam_edge_angle (3026)</div><div class=tab>float parameter : edge threshold angle.</div>
<div>sim.shapeintparam_edge_borders_hidden (3027)</div><div class=tab>int32 parameter : hide edge borders (0 or !=0).</div>
<div>sim.shapeintparam_component_cnt (3028)</div><div class=tab>int32 parameter : the number of items in a compound shape, or 1 otherwise.</div>
<div>sim.shapeintparam_sleepmodestart (3029)</div><div class=tab>int32 parameter : 1 if the dynamic shape starts in sleep mode.</div>

<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="proximitySensors" id="proximitySensors"></a>Proximity sensors</h2>
<div class="constList">
<div>sim.proxintparam_ray_invisibility (4000)</div><div class=tab>int32 parameter : detection ray invisibility state (0 or !=0)</div>
<div>sim.proxintparam_volume_type (4001)</div><div class=tab>int32 parameter : the <a href="apiConstants.htm#volumeTypes">volume type</a> of the proximity sensor. Can only be read.</div>
<div>sim.proxintparam_entity_to_detect (4002)</div><div class=tab>int32 parameter : entity handle of the entity to detect, or -1 to detect all detectable objects.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="forceSensors" id="forceSensors"></a>Force sensors</h2>
<div class="constList">
<div>sim.forcefloatparam_error_x (5000)</div><div class=tab>float parameter : force sensor internal position error X. Can only be read.</div>
<div>sim.forcefloatparam_error_y (5001)</div><div class=tab>float parameter : force sensor internal position error Y. Can only be read.</div>
<div>sim.forcefloatparam_error_z (5002)</div><div class=tab>float parameter : force sensor internal position error Z. Can only be read.</div>
<div>sim.forcefloatparam_error_a (5003)</div><div class=tab>float parameter : force sensor internal orientation error alpha (euler(0)). Can only be read.</div>
<div>sim.forcefloatparam_error_b (5004)</div><div class=tab>float parameter : force sensor internal orientation error beta (euler(1)). Can only be read.</div>
<div>sim.forcefloatparam_error_g (5005)</div><div class=tab>float parameter : force sensor internal orientation error gamma (euler(2)). Can only be read.</div>
<div>sim.forcefloatparam_error_pos (5006)</div><div class=tab>float parameter : force sensor internal position error. Can only be read.</div>
<div>sim.forcefloatparam_error_angle (5007)</div><div class=tab>float parameter : force sensor internal angular error. Can only be read.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="graphs" id="graphs"></a>Graphs</h2>
<div class="constList">
<div>sim.graphintparam_needs_refresh (10500)</div><div class=tab>int32 parameter : reads and clears the refresh flag.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="lights" id="lights"></a>Lights</h2>
<div class="constList">
<div>sim.lightintparam_pov_casts_shadows (8000)</div><div class=tab>int32 parameter : POV-Ray light casts shadows.</div>
<div>sim.lightfloatparam_spot_exponent (8001)</div><div class=tab>float parameter : light spot exponent.</div>
<div>sim.lightfloatparam_spot_cutoff (8002)</div><div class=tab>float parameter : light spot cutoff.</div>
<div>sim.lightfloatparam_const_attenuation (8003)</div><div class=tab>float parameter : light constant attenuation factor.</div>
<div>sim.lightfloatparam_lin_attenuation (8004)</div><div class=tab>float parameter : light linear attenuation factor.</div>
<div>sim.lightfloatparam_quad_attenuation (8005)</div><div class=tab>float parameter : light quadratic attenuation factor.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="cameras" id="cameras"></a>Cameras</h2>
<div class="constList">
<div>sim.cameraintparam_disabled_light_components (9000)</div><div class=tab>int32 parameter : mask of disabled light components (ambient, diffuse, specular)</div>
<div>sim.camerafloatparam_perspective_angle (9001)</div><div class=tab>float parameter : camera perspective angle.</div>
<div>sim.camerafloatparam_ortho_size (9002)</div><div class=tab>float parameter : camera orthographic size.</div>
<div>sim.cameraintparam_rendering_attributes (9003)</div><div class=tab>int32 parameter : a combination of <a href="apiConstants.htm#renderingAttributes">rendering attributes</a>. Use with care.</div>
<div>sim.cameraintparam_pov_focal_blur (9004)</div><div class=tab>int32 parameter : POV-Ray focal blur enabled flag.</div>
<div>sim.camerafloatparam_pov_blur_distance (9005)</div><div class=tab>float parameter : POV-Ray focal blur distance.</div>
<div>sim.camerafloatparam_pov_aperture (9006)</div><div class=tab>float parameter : POV-Ray aperture.</div>
<div>sim.cameraintparam_pov_blur_samples (9007)</div><div class=tab>int32 parameter : POV-Ray blur samples.</div>
<div>sim.camerafloatparam_near_clipping (9008)</div><div class=tab>float parameter : near clipping plane</div>
<div>sim.camerafloatparam_far_clipping (9009)</div><div class=tab>float parameter : far clipping plane</div>
<div>sim.cameraintparam_perspective_operation (9010)</div><div class=tab>int32 parameter : whether the camera is operated in perspective mode (1) or orthogonal mode (0).</div>
<div>sim.cameraintparam_remotecameramode (9012)</div><div class=tab>int32 parameter : the remote camera mode. Remote camera can be free (0), slave (1) or master (2).</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>

<h2><a name="dummies" id="dummies"></a>Dummies</h2>
<div class="constList">
<div>sim.dummyintparam_link_type (10000)</div><div class=tab>int32 parameter : <a href="apiConstants.htm#dummyLinkTypes">dummy link type</a>. If you set this value for a dummy that is dynamically enabled or that will be come dynamically enabled, you might have to call <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> on the two dummies for the effect to become active.</div>
<div>sim.dummyfloatparam_size (10003)</div><div class=tab>float parameter : the size of the dummy.</div>
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>


<h2><a name="octrees" id="octrees"></a>OC trees</h2>
<div class="constList">
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>


<h2><a name="pointClouds" id="pointClouds"></a>Point clouds</h2>
<div class="constList">
<br>
<div>More parameters you wish to adjust from the API? Ask us to add them for a future release!</div>
</div>
<br>



<br>
<br>
</td>
 </tr>
</table> 
</div>  
  
  
</body>

</html>