<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>paths/trajectories</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Paths/trajectories</h1>

<p>A path or trajectory is basically just data or a data structure appropriately generated or interpreted. The type of underlying data can be very varied and can represent 1D, 2D or 3D positions, but also orientations, poses, robot configurations/states, etc. For that reason it really depends on the user how that data structure is implemented in code. CoppeliaSim offers several helper <a href="apiFunctions.htm#paths">API functions related to paths/trajectories</a>, meant to create, interpret and manipulate basic path/trajectory data.</p>
<p>There is however one particular type of path data that is often used and that can also be represented in 3D space: poses, i.e. positions and orientations. CoppeliaSim offers for this type of data a <a href="paths.htm">path object</a>, that also allows simple visual creation of such data sets, by allowing to manipulate control points, which act as support of the underlying curve:</p>
<p align=center><img src="images/openPath.jpg"></p>
<p class=imageLabel>[Simple path object, composed of 100 pose data points]</p>



  
<br>
<br>

 </tr>
</table> 
</div>  
  
  
</body>

</html>
