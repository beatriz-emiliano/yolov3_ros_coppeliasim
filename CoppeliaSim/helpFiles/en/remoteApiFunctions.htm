<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Remote API functions (C/C++)</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Legacy remote API functions (C/C++)</h1>

<p class=subsectionBar>
<a name="simxAddStatusbarMessage" id="simxAddStatusbarMessage"></a>simxAddStatusbarMessage 
</p>



<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Adds a message to the status bar.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAddStatusbarMessage(simxInt clientID,const simxChar* message,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>message</strong>: the message to display</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAddStatusbarMessage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAddStatusbarMessage">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAddStatusbarMessage">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxAddStatusbarMessage">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxAppendStringSignal" id="simxAppendStringSignal"></a>simxAppendStringSignal </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Refer to <a href="#simxWriteStringStream">simxWriteStringStream</a> instead.<br><br>Appends a string to a string signal. If that signal is not yet present, it is added. See also <a href="#simxSetStringSignal">simxSetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAppendStringSignal(simxInt clientID,const simxChar* signalName,const simxUChar* signalValueToAppend,simxInt signalLength,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValueToAppend</strong>: value to append to the  signal. That value may contain any value, including embedded zeros.</div>
<div><strong>signalLength</strong>: size of the signalValueToAppend string. </div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAppendStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAppendStringSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAppendStringSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxAppendStringSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxAuxiliaryConsoleClose" id="simxAuxiliaryConsoleClose"></a>simxAuxiliaryConsoleClose 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAuxiliaryConsoleClose(simxInt clientID,simxInt consoleHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleClose">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleClose">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAuxiliaryConsoleClose">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxAuxiliaryConsoleClose">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxAuxiliaryConsoleOpen" id="simxAuxiliaryConsoleOpen"></a>simxAuxiliaryConsoleOpen 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Opens an auxiliary console window for text display. This console window is different from the application main console window. Console window handles are shared across all simulator scenes. See also <a href="#simxAuxiliaryConsolePrint">simxAuxiliaryConsolePrint</a>, <a href="#simxAuxiliaryConsoleShow">simxAuxiliaryConsoleShow</a> and <a href="#simxAuxiliaryConsoleClose">simxAuxiliaryConsoleClose</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAuxiliaryConsoleOpen(simxInt clientID,const simxChar* title,simxInt maxLines,simxInt mode,simxInt* position,simxInt* size,simxFloat* textColor,simxFloat* backgroundColor,simxInt* consoleHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>title</strong>: the title of the console window</div>
<div><strong>maxLines</strong>: the number of text lines that can be displayed and buffered</div>
<div><strong>mode</strong>: bit-coded value. Bit0 set indicates that the console window will   automatically close at simulation end, bit1 set   indicates that lines will be wrapped, bit2 set indicates that the user   can close the console window, bit3 set indicates that the console will   automatically be hidden during simulation pause, bit4 set indicates that   the console will not automatically hide when the user switches to   another scene.</div>
<div><strong>position</strong>: the initial position of the console window (x and y value). Can be nullptr</div>
<div><strong>size</strong>: the initial size of the console window (x and y value). Can be nullptr</div>
<div><strong>textColor</strong>: the color of the text (rgb values, 0-1). Can be nullptr</div>
<div><strong>backgroundColor</strong>: the background color of the console window (rgb values, 0-1). Can be nullptr</div>
<div><strong>consoleHandle</strong>: pointer to a location receiving the handle of the created console</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleOpen">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleOpen">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAuxiliaryConsoleOpen">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxAuxiliaryConsoleOpen">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxAuxiliaryConsolePrint" id="simxAuxiliaryConsolePrint"></a>simxAuxiliaryConsolePrint 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Prints to an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAuxiliaryConsolePrint(simxInt clientID,simxInt consoleHandle,const simxChar* txt,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>txt</strong>: the text to append, or nullptr to clear the console window</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsolePrint">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsolePrint">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAuxiliaryConsolePrint">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxAuxiliaryConsolePrint">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxAuxiliaryConsoleShow" id="simxAuxiliaryConsoleShow"></a>simxAuxiliaryConsoleShow 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Shows or hides an auxiliary console window. See also <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> and <a href="#simxAuxiliaryConsoleClose">simxAuxiliaryConsoleClose</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxAuxiliaryConsoleShow(simxInt clientID,simxInt consoleHandle,simxChar showState,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>consoleHandle</strong>: the handle of the console window, previously returned by the <a href="#simxAuxiliaryConsoleOpen">simxAuxiliaryConsoleOpen</a> command</div>
<div><strong>showState</strong>: indicates whether the console should be hidden (0) or shown (!=0)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxAuxiliaryConsoleShow">Python</a>, <a href="remoteApiFunctionsJava.htm#simxAuxiliaryConsoleShow">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxAuxiliaryConsoleShow">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxAuxiliaryConsoleShow">Octave</a></td> 
</tr> 
</table> 
<br>














<p class=subsectionBar>
<a name="simxCallScriptFunction" id="simxCallScriptFunction"></a>simxCallScriptFunction 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Remotely calls a CoppeliaSim script function. When calling <a href="simulationScripts.htm">simulation scripts</a>, then simulation must be running. Refer to <a href="remoteApiExtension.htm">this section</a> for additional details. </td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxCallScriptFunction(simxInt clientID,const simxChar* pathToScript,simxInt scriptHandleOrType,const simxChar* functionName,simxInt inIntCnt,const simxInt* inInt,simxInt inFloatCnt,const simxFloat* inFloat,simxInt inStringCnt,const simxChar* inString,simxInt inBufferSize,const simxUChar* inBuffer,simxInt* outIntCnt,simxInt** outInt,simxInt* outFloatCnt,simxFloat** outFloat,simxInt* outStringCnt,simxChar** outString,simxInt* outBufferSize,simxUChar** outBuffer,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>pathToScript</strong>: the path to the scene object where the script is attached to, or an empty string if the script has no associated scene object.</div>
<div><strong>scriptHandleOrType</strong>: the handle of the script, otherwise the type of the script:</div>
<div class=tab><em>sim_scripttype_mainscript</em> (0): the <a href="mainScript.htm">main script</a> will be called.</div>
<div class=tab><em>sim_scripttype_childscript</em> (1): a <a href="childScripts.htm">child script</a> will be called.</div>
<div class=tab><em>sim_scripttype_customizationscript</em> (6): a <a href="customizationScripts.htm">customization script</a> will be called.</div>
<div><strong>functionName</strong>: the name of the function to call in the specified script.</div>

<div><strong>inIntCnt</strong> (input): the number of input integer values.</div>
<div><strong>inInt</strong> (input): the input integer values that are handed over to the script function. Can be nullptr if <em>inIntCnt</em> is zero.</div>
<div><strong>inFloatCnt</strong> (input): the number of input floating-point values.</div>
<div><strong>inFloat</strong> (input): the input floating-point values that are handed over to the script function. Can be nullptr if <em>inFloatCnt</em> is zero.</div>
<div><strong>inStringCnt</strong> (input): the number of input strings.</div>
<div><strong>inString</strong> (input): the input strings that are handed over to the script function. Each string should be terminated with one zero char, e.g. &quot;Hello\0World\0&quot;. Can be nullptr if <em>inStringCnt</em> is zero.</div>
<div><strong>inBufferSize</strong> (input): the size of the input buffer.</div>
<div><strong>inBuffer</strong> (input): the input buffer (bytes) that is handed over to the script function. Can be nullptr if <em>inBufferSize</em> is zero.</div>

<div><strong>outIntCnt</strong> (output): the number of returned integer values. Can be nullptr.</div>
<div><strong>outInt</strong> (output): the returned integer values. The pointer remains valid until the next remote API call. Can be nullptr.</div>
<div><strong>outFloatCnt</strong> (output): the number of returned floating-point values. Can be nullptr.</div>
<div><strong>outFloat</strong> (output): the returned floating-point values. The pointer remains valid until the next remote API call. Can be nullptr.</div>
<div><strong>outStringCnt</strong> (output): the number of returned strings. Can be nullptr.</div>
<div><strong>outString</strong> (output): the returned strings. Each string is terminated with the zero char. The pointer remains valid until the next remote API call. Can be nullptr.</div>
<div><strong>outBufferSize</strong> (output): the size of the returned buffer. Can be nullptr.</div>
<div><strong>outBuffer</strong> (output): the returned buffer (bytes). The pointer remains valid until the next remote API call. Can be nullptr.</div>

<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCallScriptFunction">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCallScriptFunction">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxCallScriptFunction">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxCallScriptFunction">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxCheckCollision" id="simxCheckCollision"></a>simxCheckCollision 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Checks whether two entities collide.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxCheckCollision(simxInt clientID,simxInt entity1,simxInt entity2,simxUChar* collisionState,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>entity1</strong>: the handle of the first entity.</div>
<div><strong>entity2</strong>: the handle of the second entity.</div>
<div><strong>collisionState</strong>: a pointer to a value receiving the collision state (0: not colliding)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCheckCollision">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCheckCollision">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxCheckCollision">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxCheckCollision">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxCheckDistance" id="simxCheckDistance"></a>simxCheckDistance 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Measures the distance between two entities.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxCheckDistance(simxInt clientID,simxInt entity1,simxInt entity2,simxFloat* minimumDistance,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>entity1</strong>: the handle of the first entity.</div>
<div><strong>entity2</strong>: the handle of the second entity.</div>
<div><strong>minimumDistance</strong>: a pointer to a value receiving the minimum distance.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCheckDistance">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCheckDistance">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxCheckDistance">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxCheckDistance">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxClearFloatSignal" id="simxClearFloatSignal"></a>simxClearFloatSignal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears a float signal (removes it). See also <a href="#simxSetFloatSignal">simxSetFloatSignal</a>, <a href="#simxClearInt32Signal">simxClearInt32Signal</a> and <a href="#simxClearStringSignal">simxClearStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxClearFloatSignal(simxInt clientID,const simxChar* signalName,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxClearFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearFloatSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxClearFloatSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxClearFloatSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxClearInt32Signal" id="simxClearInt32Signal"></a>simxClearInt32Signal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears an integer signal (removes it). See also <a href="#simxSetInt32Signal">simxSetInt32Signal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a> and <a href="#simxClearStringSignal">simxClearStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxClearInt32Signal(simxInt clientID,const simxChar* signalName,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxClearInt32Signal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearInt32Signal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxClearInt32Signal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxClearInt32Signal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxClearStringSignal" id="simxClearStringSignal"></a>simxClearStringSignal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Clears a string signal (removes it). See also <a href="#simxSetStringSignal">simxSetStringSignal</a>, <a href="#simxClearInt32Signal">simxClearInt32Signal</a> and <a href="#simxClearFloatSignal">simxClearFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxClearStringSignal(simxInt clientID,const simxChar* signalName,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxClearStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxClearStringSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxClearStringSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxClearStringSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxCloseScene" id="simxCloseScene"></a>simxCloseScene 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes current scene, and switches to another open scene. If there is no other open scene, a new scene is then created. Should only be called when simulation is not running and is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxLoadScene">simxLoadScene</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxCloseScene(simxInt clientID,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCloseScene">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCloseScene">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxCloseScene">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxCloseScene">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxCopyPasteObjects" id="simxCopyPasteObjects"></a>simxCopyPasteObjects 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Copies and pastes objects, together with all their associated child scripts. To copy and paste whole models, you can simply copy and paste the model base object.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxCopyPasteObjects(simxInt clientID,const simxInt* objectHandles,simxInt objectCount,simxInt** newObjectHandles,simxInt* newObjectCount,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandles</strong>: an array containing the handles of the objects to copy</div>
<div><strong>objectCount</strong>: the number of handles the above array contains</div>
<div><strong>newObjectHandles</strong>: a pointer to a value receiving an array of handles of newly created objects. Individual objects of a new model are not returned, but only the model base. The array remains valid until next remote API function is called.</div>
<div><strong>newObjectCount</strong>: a pointer to a value receiving the number of handles the above array contains</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCopyPasteObjects">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCopyPasteObjects">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxCopyPasteObjects">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxCopyPasteObjects">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxCreateBuffer" id="simxCreateBuffer"></a>simxCreateBuffer </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Creates a buffer. The buffer needs to be released with <a href="#simxReleaseBuffer">simxReleaseBuffer</a> except otherwise explicitly specified. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxUChar* simxCreateBuffer(simxInt bufferSize)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>bufferSize</strong>: size of the buffer in bytes</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>A pointer to the created buffer<a href="remoteApiConstants.htm#functionErrorCodes"></a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCreateBuffer">Python</a>, <a href="remoteApiFunctionsMatlab.htm#simxCreateBuffer">Matlab</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxCreateDummy" id="simxCreateDummy"></a>simxCreateDummy 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Creates a <a href="dummies.htm">dummy</a> in the scene.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxCreateDummy(simxInt clientID,simxFloat size,const simxUChar* colors,simxInt* dummyHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>size</strong>: the size of the dummy.</div>
<div><strong>colors</strong>: 4*3 bytes (0-255) for ambient_diffuse RGB, 3 reserved values (set to zero), specular RGB and emissive RGB. Can be nullptr for default colors.</div>
<div><strong>dummyHandle</strong>: pointer to a value that will receive the dummy handle.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxCreateDummy">Python</a>, <a href="remoteApiFunctionsJava.htm#simxCreateDummy">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxCreateDummy">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxCreateDummy">Octave</a></td> 
</tr> 
</table> 
<br>















<p class=subsectionBar>
<a name="simxDisplayDialog" id="simxDisplayDialog"></a>simxDisplayDialog 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Displays a generic dialog box during simulation (and only during simulation!). Use in conjunction with <a href="#simxGetDialogResult">simxGetDialogResult</a>, <a href="#simxGetDialogInput">simxGetDialogInput</a> and <a href="#simxEndDialog">simxEndDialog</a>. Use <a href="customUIPlugin.htm">custom user interfaces</a> instead if a higher customization level is required.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxDisplayDialog(simxInt clientID,const simxChar* titleText,const simxChar* mainText,simxInt dialogType,const simxChar* initialText,simxFloat* titleColors,simxFloat* dialogColors,simxInt* dialogHandle,simxInt* uiHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>titleText</strong>: Title bar text</div>
<div><strong>mainText</strong>: Information text</div>
<div><strong>dialogType</strong>: a <a href="apiConstants.htm#genericDialogStyles">generic dialog style</a></div>
<div><strong>initialText</strong>: Initial text in the edit box if the dialog is of type sim_dlgstyle_input. Cannot be nullptr!</div>
<div><strong>titleColors</strong>: Title bar color (6 simxFloat values for RGB for background and foreground), can be nullptr for default colors</div>
<div><strong>dialogColors</strong>: Dialog color (6 simxFloat values for RGB for background and foreground), can be nullptr for default colors</div>
<div><strong>dialogHandle</strong>: handle of the generic dialog (different from OpenGl-based custom UI handle!! (see hereafter)). This handle should be used with the following functions: <a href="#simxGetDialogResult">simxGetDialogResult</a>, <a href="#simxGetDialogInput">simxGetDialogInput</a> and <a href="#simxEndDialog">simxEndDialog</a>.</div>
<div><strong>uiHandle</strong>: a pointer to a value accepting the handle of the corresponding OpenGl-based custom UI. Can be nullptr</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxDisplayDialog">Python</a>, <a href="remoteApiFunctionsJava.htm#simxDisplayDialog">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxDisplayDialog">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxDisplayDialog">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxEndDialog" id="simxEndDialog"></a>simxEndDialog 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Closes and releases resource from a previous call to <a href="#simxDisplayDialog">simxDisplayDialog</a>. Even if the dialog is not visible anymore, you should release resources by using this function (however at the end of a simulation, all dialog resources are automatically released).</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxEndDialog(simxInt clientID,simxInt dialogHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxEndDialog">Python</a>, <a href="remoteApiFunctionsJava.htm#simxEndDialog">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxEndDialog">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxEndDialog">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxEraseFile" id="simxEraseFile"></a>simxEraseFile </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Erases a file on the server side. This function is used by several other functions internally (e.g. <a href="#simxLoadModel">simxLoadModel</a>). See also <a href="#simxTransferFile">simxTransferFile</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxEraseFile(simxInt clientID,const simxChar* fileName_serverSide,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>fileName_serverSide</strong>: the file to erase on the server side. For now, do not specify a path (the file will be erased in the remote API plugin directory)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot

</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxEraseFile">Python</a>, <a href="remoteApiFunctionsJava.htm#simxEraseFile">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxEraseFile">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxEraseFile">Octave</a></td> 
</tr> 
</table> 
<br>







<p class=subsectionBar><a name="simxFinish" id="simxFinish"></a>simxFinish</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Ends the communication thread. This should be the very last remote API function called on the client side. simxFinish should only be called after a successfull call to <a href="#simxStart">simxStart</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxVoid simxFinish(simxInt clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>. Can be -1 to end all running communication threads.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxFinish">Python</a>, <a href="remoteApiFunctionsJava.htm#simxFinish">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxFinish">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxFinish">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetAndClearStringSignal" id="simxGetAndClearStringSignal"></a>simxGetAndClearStringSignal
</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Refer to <a href="#simxReadStringStream">simxReadStringStream</a> instead.<br><br>Gets the value of a string signal, then clears it.  Useful to retrieve continuous data from the server. See also <a href="#simxGetStringSignal">simxGetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetAndClearStringSignal(simxInt clientID,const simxChar* signalName,simxUChar** signalValue,simxInt* signalLength,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: pointer to a pointer receiving the value of the signal. The signal value will remain valid until next remote API call</div>
<div><strong>signalLength</strong>: pointer to a location receiving the value of the signal length, since it may contain any data (also embedded zeros). </div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Since this function will clear a read signal, and we cannot afford to wait for a reply (well, we could, but that would mean a blocking operation), the function operates in a special mode and should be used as in following example:</div>

<br>
<code class="hljs language-c++ simple">
// Initialization phase:
simxUChar* signal;
simxInt sLength;
simxGetAndClearStringSignal(cid,"sig",&amp;signal,&amp;sLength,simx_opmode_streaming);

// while we are connected:
while (simxGetConnectionId(cid)!=-1)
{ 
  if (simxGetAndClearStringSignal(cid,"sig",&amp;signal,&amp;sLength,simx_opmode_buffer)==
      simx_return_ok)
  {
    // A signal was retrieved!
    // Enable streaming again (was automatically disabled with the positive event):
    simxGetAndClearStringSignal(cid,"sig",&amp;signal,&amp;sLength,simx_opmode_streaming);
  }

  ..

}</code>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetAndClearStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetAndClearStringSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetAndClearStringSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetAndClearStringSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetArrayParam" id="simxGetArrayParam"></a>simxGetArrayParam 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves 3 values from an array. See the <a href="apiConstants.htm#arrayParameters">array parameter identifiers</a>. See also <a href="#simxSetArrayParam">simxSetArrayParam</a>, <a href="#simxGetBoolParam">simxGetBoolParam</a>, <a href="#simxGetInt32Param">simxGetInt32Param</a>, <a href="#simxGetFloatParam">simxGetFloatParam</a> and <a href="#simxGetStringParam">simxGetStringParam</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetArrayParam(simxInt clientID,simxInt paramIdentifier,simxFloat* paramValues,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#arrayParameters">array parameter identifier</a></div>
<div><strong>paramValues</strong>: a pointer to 3 values that will receive the parameters</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetArrayParam">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetArrayParam">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetArrayParam">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetArrayParam">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetBoolParam" id="simxGetBoolParam"></a>simxGetBoolParam 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a bool value. See the <a href="apiConstants.htm#booleanParameters">bool parameter identifiers</a>. See also <a href="#simxSetBoolParam">simxSetBoolParam</a>, <a href="#simxGetInt32Param">simxGetInt32Param</a>, <a href="#simxGetFloatParam">simxGetFloatParam</a>, <a href="#simxGetArrayParam">simxGetArrayParam</a> and <a href="#simxGetStringParam">simxGetStringParam</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetBoolParam(simxInt clientID,simxInt paramIdentifier,simxUChar* paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#booleanParameters">bool parameter identifier</a></div>
<div><strong>paramValue</strong>: a pointer that will receive the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetBoolParam">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetBoolParam">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetBoolParam">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetBoolParam">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetCollectionHandle" id="simxGetCollectionHandle"></a>simxGetCollectionHandle</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>This is a convenience function. Since CoppeliaSim V4.2.0, collections should be dynamically created and do not have a name anymore. This function will first try to retrieve a static collection with the specified name (for backward compatibility's sake). If such a collection does not exist, it will try to return the integer signal with the specified name. On CoppeliaSim's side, one could do:

<code class="hljs language-lua simple">
local collectionHandle=sim.createCollection(0)
sim.addItemToCollection(collectionHandle,..)
..
sim.setInt32Signal('collectionName',collectionHandle)</code>

</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetCollectionHandle(simxInt clientID,const simxChar* collectionName,simxInt* handle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>collectionName</strong>: name of the collection.</div>
<div><strong>handle</strong>: pointer to a value that will receive the handle</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetCollectionHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetCollectionHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetCollectionHandle">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetCollectionHandle">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetCollisionHandle" id="simxGetCollisionHandle"></a>simxGetCollisionHandle</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. see <a href="#simxCheckCollision">simxCheckCollision</a> instead.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetCollisionHandle(simxInt clientID,const simxChar* collisionObjectName,simxInt* handle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>collisionObjectName</strong>: name of the collision object.</div>
<div><strong>handle</strong>: pointer to a value that will receive the handle</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetCollisionHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetCollisionHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetCollisionHandle">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetCollisionHandle">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxGetConnectionId" id="simxGetConnectionId"></a>simxGetConnectionId</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Returns the ID of the current connection. Use this function to track the connection state to the server. See also <a href="#simxStart">simxStart</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetConnectionId(simxInt clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a connection ID, or -1 if the client is not connected to the server. Different connection IDs indicate temporary disconections in-between.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetConnectionId">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetConnectionId">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetConnectionId">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetConnectionId">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetDialogInput" id="simxGetDialogInput"></a>simxGetDialogInput 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Queries the text the user entered into a  generic dialog box of style sim_dlgstyle_input. To be used after <a href="#simxDisplayDialog">simxDisplayDialog</a> was called and after <a href="#simxGetDialogResult">simxGetDialogResult</a> returned sim_dlgret_ok.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetDialogInput(simxInt clientID,simxInt dialogHandle,simxChar** inputText,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>inputText</strong>: pointer to a pointer receiving the string the user entered. The pointer is valid until another remote API function is called.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking 
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetDialogInput">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDialogInput">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetDialogInput">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetDialogInput">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetDialogResult" id="simxGetDialogResult"></a>simxGetDialogResult 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Queries the result of a dialog box. To be used after <a href="#simxDisplayDialog">simxDisplayDialog</a> was called.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetDialogResult(simxInt clientID,simxInt dialogHandle,simxInt* result,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>dialogHandle</strong>: handle of generic dialog (return value of <a href="#simxDisplayDialog">simxDisplayDialog</a>)</div>
<div><strong>result</strong>: pointer receiving the <a href="apiConstants.htm#genericDialogReturnValues">result value</a>. </div>
<br>
<div>Note. If the return value is sim_dlgret_still_open, the dialog was not closed and no button was pressed. Otherwise, you should free resources with <a href="#simxEndDialog">simxEndDialog</a> (the dialog might not be visible anymore, but is still present)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot 
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetDialogResult">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDialogResult">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetDialogResult">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetDialogResult">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetDistanceHandle" id="simxGetDistanceHandle"></a>simxGetDistanceHandle</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. see <a href="#simxCheckDistance">simxCheckDistance</a> instead.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetDistanceHandle(simxInt clientID,const simxChar* distanceObjectName,simxInt* handle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>distanceObjectName</strong>: name of the distance object.</div>
<div><strong>handle</strong>: pointer to a value that will receive the handle</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetDistanceHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetDistanceHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetDistanceHandle">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetDistanceHandle">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetFloatParam" id="simxGetFloatParam"></a>simxGetFloatParam 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a floating point value. See the <a href="apiConstants.htm#floatingParameters">floating-point parameter identifiers</a>. See also <a href="#simxSetFloatParam">simxSetFloatParam</a>, <a href="#simxGetBoolParam">simxGetBoolParam</a>, <a href="#simxGetInt32Param">simxGetInt32Param</a>, <a href="#simxGetArrayParam">simxGetArrayParam</a> and <a href="#simxGetStringParam">simxGetStringParam</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetFloatParam(simxInt clientID,simxInt paramIdentifier,simxFloat* paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#floatingParameters">floating parameter identifier</a></div>
<div><strong>paramValue</strong>: a pointer that will receive the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetFloatParam">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetFloatParam">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetFloatParam">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetFloatParam">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetFloatSignal" id="simxGetFloatSignal"></a>simxGetFloatSignal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of a float signal. Signals are cleared at simulation start. See also <a href="#simxSetFloatSignal">simxSetFloatSignal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a>, <a href="#simxGetInt32Signal">simxGetInt32Signal</a> and <a href="#simxGetStringSignal">simxGetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetFloatSignal(simxInt clientID,const simxChar* signalName,simxFloat* signalValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: pointer to a location receiving the value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetFloatSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetFloatSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetFloatSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxGetInMessageInfo" id="simxGetInMessageInfo"></a>simxGetInMessageInfo</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves information about the last received message from the server. This is a remote API helper function. See also <a href="#simxGetOutMessageInfo">simxGetOutMessageInfo</a>.</div>
<br>
<div>If the client didn't receive any command reply from the server for a while, the data retrieved with this function won't be up-to-date. In order to avoid this, you should start at least one streaming command, which will guarantee regular message income.</div>
</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetInMessageInfo(simxInt clientID,simxInt infoType,simxInt* info)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>infoType</strong>: an <a href="remoteApiConstants.htm#inboxMessageInfoType">inbox message info type</a></div>
<div><strong>info</strong>: pointer to a simxInt value receiving the requested information
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>-1 in case of an error</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetInMessageInfo">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetInMessageInfo">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetInMessageInfo">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetInMessageInfo">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetInt32Param" id="simxGetInt32Param"></a>simxGetInt32Param 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an integer value. See the <a href="apiConstants.htm#integerParameters">integer parameter identifiers</a>. See also <a href="#simxSetInt32Param">simxSetInt32Param</a>, <a href="#simxGetBoolParam">simxGetBoolParam</a>, <a href="#simxGetFloatParam">simxGetFloatParam</a>, <a href="#simxGetArrayParam">simxGetArrayParam</a> and <a href="#simxGetStringParam">simxGetStringParam</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetInt32Param(simxInt clientID,simxInt paramIdentifier,simxInt* paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 

<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#integerParameters">integer parameter identifier</a></div>
<div><strong>paramValue</strong>: a pointer that will receive the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetInt32Param">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetInt32Param">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetInt32Param">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetInt32Param">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetInt32Signal" id="simxGetInt32Signal"></a>simxGetInt32Signal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of an integer signal. Signals are cleared at simulation start. See also <a href="#simxSetInt32Signal">simxSetInt32Signal</a>, <a href="#simxClearInt32Signal">simxClearInt32Signal</a>, <a href="#simxGetFloatSignal">simxGetFloatSignal</a> and <a href="#simxGetStringSignal">simxGetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetInt32Signal(simxInt clientID,const simxChar* signalName,simxInt* signalValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: pointer to a location receiving the value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetInt32Signal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetInt32Signal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetInt32Signal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetInt32Signal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetJointForce" id="simxGetJointForce"></a>simxGetJointForce 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the force or torque applied to a joint  along/about its active axis. This function retrieves meaningful information only if the joint is prismatic or revolute, and is dynamically enabled. With the <a href="dynamicsModule.htm#bullet">Bullet</a> engine, this function returns the force or torque applied to the joint motor  (torques from joint limits are not taken into account). With the <a href="dynamicsModule.htm#ode">ODE</a> or <a href="dynamicsModule.htm#vortex">Vortex</a> engine, this function returns the total force or torque applied to a joint  along/about its z-axis. See also <a href="#simxSetJointMaxForce">simxSetJointMaxForce</a>, <a href="#simxReadForceSensor">simxReadForceSensor</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetJointForce(simxInt clientID,simxInt jointHandle,simxFloat* force,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>force</strong>: the force or the torque applied to the joint  along/about its z-axis
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetJointForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointForce">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetJointForce">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointForce">Octave</a></td> 
</tr> 
</table> 
<br>
















<p class=subsectionBar>
<a name="simxGetJointMaxForce" id="simxGetJointMaxForce"></a>simxGetJointMaxForce 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the maximum force the joint is able to exert. See also <a href="#simxSetJointMaxForce">simxSetJointMaxForce</a> and <a href="#simxGetJointForce">simxGetJointForce</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetJointMaxForce(simxInt clientID,simxInt jointHandle,simxFloat* force,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>force</strong>: the maximum force the joint can exert</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetJointMaxForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointMaxForce">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetJointMaxForce">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointMaxForce">Octave</a></td> 
</tr> 
</table> 
<br>
















<p class=subsectionBar>
<a name="simxGetJointMatrix" id="simxGetJointMatrix"></a>simxGetJointMatrix 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the intrinsic transformation matrix of a joint (the transformation caused by the joint movement). See also <a href="#simxSetSphericalJointMatrix">simxSetSphericalJointMatrix</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetJointMatrix(simxInt clientID,simxInt jointHandle,simxFloat* matrix,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>matrix</strong>: pointer to 12 simxFloat values. See the regular API equivalent function for details
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetJointMatrix">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointMatrix">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetJointMatrix">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointMatrix">Octave</a></td> 
</tr> 
</table> 
<br>










<p class=subsectionBar>
<a name="simxGetJointPosition" id="simxGetJointPosition"></a>simxGetJointPosition 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the intrinsic position of a joint. This function cannot be used with spherical joints (use <a href="#simxGetJointMatrix">simxGetJointMatrix</a> instead). See also <a href="#simxSetJointPosition">simxSetJointPosition</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetJointPosition(simxInt clientID,simxInt jointHandle,simxFloat* position,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>position</strong>: intrinsic position of the joint. This is a one-dimensional value: if the joint is revolute, the rotation angle is returned, if the joint is prismatic, the translation amount is returned, etc.
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetJointPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetJointPosition">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointPosition">Octave</a></td> 
</tr> 
</table> 
<br>












<p class=subsectionBar><a name="simxGetLastCmdTime" id="simxGetLastCmdTime"></a>simxGetLastCmdTime</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves the simulation time of the last fetched command (i.e. when the last fetched command was processed on the server side). The function can be used to verify how &quot;fresh&quot; a command reply is, or whether a command reply was recently updated. For example:</div>
<br>

<code class="hljs language-c++ simple">
if (simxGetVisionSensorImage(cid,handle,res,&amp;img,0,sim_opmode_buffer)==simx_return_ok)
    imageAcquisitionTime=simxGetLastCmdTime(cid);
</code>

<br>
<div>If some streaming commands are running, simxGetLastCmdTime will always retrieve the current simulation time, otherwise, only the simulation time of the last command that retrieved data from CoppeliaSim. This is a remote API helper function.</div></td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetLastCmdTime(simxInt clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>The simulation time in milliseconds when the command reply was generated, or 0 if simulation was not running.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetLastCmdTime">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetLastCmdTime">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetLastCmdTime">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetLastCmdTime">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetLastErrors" id="simxGetLastErrors"></a>simxGetLastErrors 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the last 50 errors that occured on the server side, and clears the error buffer there. Only errors that occured because of this client will be reported.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetLastErrors(simxInt clientID,simxInt* errorCnt,simxChar** errorStrings,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>errorCnt</strong>: pointer receiving the number of error strings returned</div>
<div><strong>errorStrings</strong>: pointer to a string pointer receiving the address of an error string (individual strings are separated by a zero character). The address is valid until next remote API function is called</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls) when not debugging. For debugging purposes, use simx_opmode_blocking.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetLastErrors">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetLastErrors">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetLastErrors">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetLastErrors">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetModelProperty" id="simxGetModelProperty"></a>simxGetModelProperty 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the properties of a model. See also <a href="#simxSetModelProperty">simxSetModelProperty</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetModelProperty(simxInt clientID,simxInt objectHandle,simxInt* prop,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>prop</strong>: pointer to a location receiving the <a href="apiConstants.htm#modelProperties">model property value</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_blocking (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetModelProperty">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetModelProperty">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetModelProperty">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetModelProperty">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectChild" id="simxGetObjectChild"></a>simxGetObjectChild 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the handle of an object's child object. See also <a href="#simxGetObjectParent">simxGetObjectParent</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectChild(simxInt clientID,simxInt parentObjectHandle,simxInt childIndex,simxInt* childObjectHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>parentObjectHandle</strong>: handle of the object</div>
<div><strong>childIndex</strong>: zero-based index of the child's position. To retrieve all children of an object, call the function by increasing the index until the child handle is  -1</div>
<div><strong>childObjectHandle</strong>: pointer to a value receiving the handle of the child object. If the value is -1, there is no child at the given index</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectChild">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectChild">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectChild">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectChild">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectFloatParameter" id="simxGetObjectFloatParameter"></a>simxGetObjectFloatParameter 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a floating-point parameter of a object. See also <a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a> and <a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectFloatParameter(simxInt clientID,simxInt objectHandle,simxInt parameterID,simxFloat* parameterValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to retrieve. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: pointer to a location that will receive the value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_blocking (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectFloatParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectFloatParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectFloatParameter">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectFloatParameter">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectGroupData" id="simxGetObjectGroupData"></a>simxGetObjectGroupData</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Simultaneously retrieves data of various objects in a CoppeliaSim scene.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectGroupData(simxInt clientID,simxInt objectType,simxInt dataType,simxInt* handlesCount,simxInt** handles,simxInt* intDataCount,simxInt** intData,simxInt* floatDataCount,simxFloat** floatData,simxInt* stringDataCount,simxChar** stringData,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectType</strong>: a <a href="apiConstants.htm#sceneObjectTypes">scene object type</a>, sim_appobj_object_type for all <a href="objects.htm">scene objects</a>, or a <a href="#simxGetCollectionHandle">collection</a> handle.</div>
<div><strong>dataType</strong>: the type of data that is desired: </div>
<div class=tab>0: retrieves the object names (deprecated. See further down)</div>
<div class=tab>1: retrieves the <a href="apiConstants.htm#sceneObjectTypes">object types</a> (in intData)</div>
<div class=tab>2: retrieves the parent object handles (in intData)</div>
<div class=tab>3: retrieves the absolute object positions (in floatData. There are 3 values for each object (x,y,z))</div>
<div class=tab>4: retrieves the local object positions (in floatData. There are 3 values for each object (x,y,z))</div>
<div class=tab>5: retrieves the absolute object orientations as <a href="positionOrientationTransformation.htm#euler">Euler angles</a> (in floatData. There are 3 values for each object (alpha,beta,gamma))</div>
<div class=tab>6: retrieves the local object orientations as <a href="positionOrientationTransformation.htm#euler">Euler angles</a> (in floatData. There are 3 values for each object (alpha,beta,gamma))</div>
<div class=tab>7: retrieves the absolute object orientations as quaternions (in floatData. There are 4 values for each object (qx,qy,qz,qw))</div>
<div class=tab>8: retrieves the local object orientations as quaternions (in floatData. There are 4 values for each object (qx,qy,qz,qw))</div>
<div class=tab>9: retrieves the absolute object positions and orientations (as <a href="positionOrientationTransformation.htm#euler">Euler angles</a>) (in floatData. There are 6 values for each object (x,y,z,alpha,beta,gamma))</div>
<div class=tab>10: retrieves the local object positions and orientations (as <a href="positionOrientationTransformation.htm#euler">Euler angles</a>) (in floatData. There are 6 values for each object (x,y,z,alpha,beta,gamma))</div>
<div class=tab>11: retrieves the absolute object positions and orientations (as quaternions) (in floatData. There are 7 values for each object (x,y,z,qx,qy,qz,qw))</div>
<div class=tab>12: retrieves the local object positions and orientations (as quaternions) (in floatData. There are 7 values for each object (x,y,z,qx,qy,qz,qw))</div>
<div class=tab>13: retrieves proximity sensor data (in intData (2 values): detection state, detected object handle. In floatData (6 values): detected point (x,y,z) and detected surface normal (nx,ny,nz))</div>
<div class=tab>14: retrieves force sensor data (in intData (1 values): force sensor state. In floatData (6 values): force (fx,fy,fz) and torque (tx,ty,tz))</div>
<div class=tab>15: retrieves joint state data (in floatData (2 values): position, force/torque)</div>
<div class=tab>16: retrieves joint properties data (in intData (2 values): joint type, joint mode (bit16=hybid operation). In floatData (2 values): joint limit low, joint range (-1.0 if joint is cyclic))</div>
<div class=tab>17: retrieves the object linear velocity (in floatData. There are 3 values for each object (vx,vy,vz))</div>
<div class=tab>18: retrieves the object angular velocity as <a href="positionOrientationTransformation.htm#euler">Euler angles</a> per seconds (in floatData. There are 3 values for each object (dAlpha,dBeta,dGamma))</div>
<div class=tab>19: retrieves the object linear and angular velocity (in floatData. There are 6 values for each object (vx,vy,vz,dAlpha,dBeta,dGamma))</div>
<div class=tab>20: retrieves the object aliases (in stringData.)</div>
<div class=tab>21: retrieves the object paths (in stringData.)</div>

<div><strong>handlesCount</strong> (output): the number of returned object handles. Can be nullptr.</div>
<div><strong>handles</strong> (output): the object handles. The pointer remains valid until the next remote API call. Can be nullptr.</div>
<div><strong>intDataCount</strong> (output): the number of returned integer values. Can be nullptr.</div>
<div><strong>intData</strong> (output): the integer values. The pointer remains valid until the next remote API call. Can be nullptr.</div>
<div><strong>floatDataCount</strong> (output): the number of returned float values. Can be nullptr.</div>
<div><strong>floatData</strong> (output): the float values. The pointer remains valid until the next remote API call. Can be nullptr.</div>
<div><strong>stringDataCount</strong> (output): the number of returned strings. Can be nullptr.</div>
<div><strong>stringData</strong> (output): the strings. Each string is separated by the zero char ('\0'). The pointer remains valid until the next remote API call. Can be nullptr.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking or simx_opmode_streaming.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectGroupData">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectGroupData">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectGroupData">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectGroupData">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectHandle" id="simxGetObjectHandle"></a>simxGetObjectHandle 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an object handle based on its path and alias.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectHandle(simxInt clientID,const simxChar* objectPath,simxInt* handle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectPath</strong>: the path of the object. See the section on <a href="accessingSceneObjects.htm">accessing scene objects</a> for details. </div>
<div><strong>handle</strong>: pointer to a value that will receive the handle</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectHandle">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectHandle">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectHandle">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectHandle">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectIntParameter" id="simxGetObjectIntParameter"></a>simxGetObjectIntParameter 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves an integer parameter of a object. See also <a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a> and <a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectIntParameter(simxInt clientID,simxInt objectHandle,simxInt parameterID,simxInt* parameterValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to retrieve. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: pointer to a location that will receive the value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_blocking (depending on the intended usage)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectIntParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectIntParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectIntParameter">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectIntParameter">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectOrientation" id="simxGetObjectOrientation"></a>simxGetObjectOrientation 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the orientation (<a href="eulerAngles.htm">Euler angles</a>) of an object. See also <a href="#simxSetObjectOrientation">simxSetObjectOrientation</a>, <a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a>,<a href="#simxGetObjectPosition">simxGetObjectPosition</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectOrientation(simxInt clientID,simxInt objectHandle,simxInt relativeToObjectHandle,simxFloat* eulerAngles,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame we want the orientation.   Specify -1 to retrieve the absolute orientation, sim_handle_parent to   retrieve the orientation relative to the object's parent, or an object   handle relative to whose reference frame you want the orientation</div>
<div><strong>eulerAngles</strong>: pointer to 3 values receiving the Euler angles (alpha, beta and gamma)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectOrientation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectOrientation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectOrientation">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectOrientation">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectParent" id="simxGetObjectParent"></a>simxGetObjectParent 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the handle of an object's parent object. See also <a href="#simxGetObjectChild">simxGetObjectChild</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectParent(simxInt clientID,simxInt objectHandle,simxInt* parentObjectHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parentObjectHandle</strong>: pointer to a value receiving the handle of the parent object. If the value is -1, the object has no parent</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectParent">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectParent">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectParent">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectParent">Octave</a></td> 

</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectPosition" id="simxGetObjectPosition"></a>simxGetObjectPosition 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the position  of an object. See also <a href="#simxSetObjectPosition">simxSetObjectPosition</a>, <a href="#simxGetObjectOrientation">simxGetObjectOrientation</a>, <a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectPosition(simxInt clientID,simxInt objectHandle,simxInt relativeToObjectHandle,simxFloat* position,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame we want the position.   Specify -1 to retrieve the absolute position, sim_handle_parent to   retrieve the position relative to the object's parent, or an object   handle relative to whose reference frame you want the position</div>
<div><strong>position</strong>: pointer to 3 values receiving the position</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectPosition">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectPosition">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectQuaternion" id="simxGetObjectQuaternion"></a>simxGetObjectQuaternion 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the quaternion of an object. See also <a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectQuaternion(simxInt clientID,simxInt objectHandle,simxInt relativeToObjectHandle,simxFloat* quat,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame we want the quaternion.   Specify -1 to retrieve the absolute quaternion, sim_handle_parent to retrieve the quaternion relative to the object's parent, or an object   handle relative to whose reference frame you want the quaternion</div>
<div><strong>quat</strong>: pointer to 4 values receiving the quaternion (x,y,z,w)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectQuaternion">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectQuaternion">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectQuaternion">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectQuaternion">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjects" id="simxGetObjects"></a>simxGetObjects 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves object handles of a given type, or of all types (i.e. all object handles). See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjects(simxInt clientID,simxInt objectType,simxInt* objectCount,simxInt** objectHandles,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectType</strong>: <a href="apiConstants.htm#sceneObjectTypes">object type</a> (sim_object_shape_type, sim_object_joint_type, etc., or sim_handle_all for any type of object</div>
<div><strong>objectCount</strong>: pointer to a value that will receive the number of retrieved handles</div>
<div><strong>objectHandles</strong>: pointer to a pointer that will receive an object handle array. The array remains valid until next remote API function is called.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjects">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjects">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjects">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjects">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectSelection" id="simxGetObjectSelection"></a>simxGetObjectSelection 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves all selected object's handles. See also <a href="#simxSetObjectSelection">simxSetObjectSelection</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectSelection(simxInt clientID,simxInt** objectHandles,simxInt* objectCount,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandles</strong>: pointer to a pointer that will receive an object handle array. The array remains valid until next remote API function is called.</div>
<div><strong>objectCount</strong>: pointer to a value that will receive the number of elements in above's array.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls), or simx_opmode_blocking depending on the intent.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectSelection">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectSelection">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectSelection">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectSelection">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetObjectVelocity" id="simxGetObjectVelocity"></a>simxGetObjectVelocity 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the linear and angular velocity of an object. See also <a href="#simxGetObjectPosition">simxGetObjectPosition</a>, <a href="#simxGetObjectOrientation">simxGetObjectOrientation</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetObjectVelocity(simxInt clientID,simxInt objectHandle,simxFloat* linearVelocity,simxFloat* angularVelocity,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>linearVelocity</strong>: pointer to 3 values receiving the linearVelocity (vx, vy, vz). Can be nullptr.</div>
<div><strong>angularVelocity</strong>: pointer to 3 values receiving the angularVelocity (dAlpha, dBeta, dGamma). Can be nullptr.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetObjectVelocity">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetObjectVelocity">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetObjectVelocity">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetObjectVelocity">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxGetOutMessageInfo" id="simxGetOutMessageInfo"></a>simxGetOutMessageInfo</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr><div>Retrieves information about the next message to send to the server. This is a remote API helper function. See also <a href="#simxGetInMessageInfo">simxGetInMessageInfo</a>.</div></td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetOutMessageInfo(simxInt clientID,simxInt infoType,simxInt* info)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>infoType</strong>: an <a href="remoteApiConstants.htm#outboxMessageInfoType">outbox message info type</a></div>
<div><strong>info</strong>: pointer to a simxInt value receiving the requested information
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>-1 in case of an error</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetOutMessageInfo">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetOutMessageInfo">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetOutMessageInfo">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetOutMessageInfo">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxGetPingTime" id="simxGetPingTime"></a>simxGetPingTime</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the time needed for a command to be sent to the server, executed, and sent back. That time depends on various factors like the client settings, the network load, whether a simulation is running, whether the simulation is real-time, the simulation time step, etc. The function is blocking. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetPingTime(simxInt clientID,simxInt* pingTime)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>pingTime</strong>: a pointer to a simxInt value accepting the ping time in milliseconds.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetPingTime">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetPingTime">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetPingTime">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetPingTime">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetStringParam" id="simxGetStringParam"></a>simxGetStringParam 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves a string value. See the <a href="apiConstants.htm#stringParameters">string parameter identifiers</a>. See also <a href="#simxGetBoolParam">simxGetBoolParam</a>, <a href="#simxGetInt32Param">simxGetInt32Param</a>, <a href="#simxGetArrayParam">simxGetArrayParam</a> and <a href="#simxGetFloatParam">simxGetFloatParam</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetStringParam(simxInt clientID,simxInt paramIdentifier,simxChar** paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#stringParameters">string parameter identifier</a></div>
<div><strong>paramValue</strong>: a pointer to a pointer that will receive the string. The string pointer is valid until next remote API function is called.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking (if not called on a regular basis)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetStringParam">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetStringParam">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetStringParam">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetStringParam">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetStringSignal" id="simxGetStringSignal"></a>simxGetStringSignal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of a string signal. Signals are cleared at simulation start. See also <a href="#simxSetStringSignal">simxSetStringSignal</a>, <a href="#simxReadStringStream">simxReadStringStream</a>, <a href="#simxClearStringSignal">simxClearStringSignal</a>, <a href="#simxGetInt32Signal">simxGetInt32Signal</a> and <a href="#simxGetFloatSignal">simxGetFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetStringSignal(simxInt clientID,const simxChar* signalName,simxUChar** signalValue,simxInt* signalLength,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: pointer to a pointer receiving the value of the signal. The signal value will remain valid until next remote API call</div>
<div><strong>signalLength</strong>: pointer to a location receiving the value of the signal length, since it may contain any data (also embedded zeros). </div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetStringSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetStringSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetStringSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetUIButtonProperty" id="simxGetUIButtonProperty"></a>simxGetUIButtonProperty (DEPRECATED)</p>

<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>








<p class=subsectionBar>
<a name="simxGetUIEventButton" id="simxGetUIEventButton"></a>simxGetUIEventButton (DEPRECATED)</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>



<p class=subsectionBar>
<a name="simxGetUIHandle" id="simxGetUIHandle"></a>simxGetUIHandle (DEPRECATED)</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetUISlider" id="simxGetUISlider"></a>simxGetUISlider (DEPRECATED)</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetVisionSensorDepthBuffer" id="simxGetVisionSensorDepthBuffer"></a>simxGetVisionSensorDepthBuffer 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the depth buffer of a vision sensor. The returned data doesn't make sense if <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> wasn't called previously (sim.handleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the &quot;freshness&quot; of the retrieved data. See also <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a>.</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetVisionSensorDepthBuffer(simxInt clientID,simxInt sensorHandle,simxInt* resolution,simxFloat** buffer,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>resolution</strong>: pointer to 2 simxInt values receiving the resolution of the image</div>
<div><strong>buffer</strong>: pointer to a pointer to the depth buffer data. The data remains valid until next remote API function is called (i.e. the data is automatically released). Values are in the range of 0-1 (0=closest to sensor, 1=farthest from sensor).</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetVisionSensorDepthBuffer">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorDepthBuffer">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetVisionSensorDepthBuffer">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetVisionSensorDepthBuffer">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxGetVisionSensorImage" id="simxGetVisionSensorImage"></a>simxGetVisionSensorImage 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Retrieves the image of a vision sensor. The returned data doesn't make sense if <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> wasn't called previously (sim.handleVisionSensor is called by default in the main script if the vision sensor is not tagged as explicit handling). Use the <a href="#simxGetLastCmdTime">simxGetLastCmdTime</a> function to verify the &quot;freshness&quot; of the retrieved data. See also <a href="#simxSetVisionSensorImage">simxSetVisionSensorImage</a>, <a href="#simxGetVisionSensorDepthBuffer">simxGetVisionSensorDepthBuffer</a> and <a href="#simxReadVisionSensor">simxReadVisionSensor</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxGetVisionSensorImage(simxInt clientID,simxInt sensorHandle,simxInt* resolution,simxUChar** image,simxUChar options,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>resolution</strong>: pointer to 2 simxInt values receiving the resolution of the image</div>
<div><strong>image</strong>: pointer to a pointer to the image data. The data remains valid until next remote API function is called (i.e. the data is automatically released)</div>
<div><strong>options</strong>: image options, bit-coded:</div>
<div class=tab>bit0 set: each image pixel is a byte (greyscale image), otherwise each image pixel is a rgb byte-triplet</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetVisionSensorImage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetVisionSensorImage">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetVisionSensorImage">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxJointGetForce" id="simxJointGetForce"></a>simxJointGetForce (DEPRECATED)</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. See <a href="#simxGetJointForce">simxGetJointForce</a> instead.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxJointGetForce(simxInt clientID,simxInt jointHandle,simxFloat* force,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>force</strong>: the force or the torque applied to the joint  along/about its z-axis
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxGetJointForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxGetJointForce">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxGetJointForce">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxGetJointForce">Octave</a></td> 
</tr> 
</table> 
<br>
















<p class=subsectionBar>
<a name="simxLoadModel" id="simxLoadModel"></a>simxLoadModel 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Loads a previously saved model. See also <a href="#simxLoadScene">simxLoadScene</a> and <a href="#simxTransferFile">simxTransferFile</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxLoadModel(simxInt clientID,const simxChar* modelPathAndName,simxUChar options,simxInt* baseHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>modelPathAndName</strong>: the model filename, including the path and extension ("ttm"). The file is relative to the client or server system depending on the <strong>options</strong> value (see next argument)</div>
<div><strong>options</strong>: options, bit-coded:</div>
<div class=tab>bit0 set: the specified file is located on the client side (in that case the function will be blocking since the model first has to be transferred to the server). Otherwise it is located on the server side</div>
<div><strong>baseHandle</strong>: the loaded model base. Can be nullptr.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxLoadModel">Python</a>, <a href="remoteApiFunctionsJava.htm#simxLoadModel">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxLoadModel">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxLoadModel">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxLoadScene" id="simxLoadScene"></a>simxLoadScene 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Loads a previously saved scene. Should only be called when simulation is not running and is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxCloseScene">simxCloseScene</a>, <a href="#simxLoadModel">simxLoadModel</a>, and <a href="#simxTransferFile">simxTransferFile</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxLoadScene(simxInt clientID,const simxChar* scenePathAndName,simxUChar options,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>scenePathAndName</strong>: the scene filename, including the path and extension ("ttt"). The file is relative to the client or server system depending on the <strong>options</strong> value (see next argument)</div>
<div><strong>options</strong>: options, bit-coded:</div>
<div class=tab>bit0 set: the specified file is located on the client side (in that case the function will be blocking since the scene first has to be transferred to the server). Otherwise it is located on the server side</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxLoadScene">Python</a>, <a href="remoteApiFunctionsJava.htm#simxLoadScene">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxLoadScene">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxLoadScene">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxLoadUI" id="simxLoadUI"></a>simxLoadUI (DEPRECATED)
</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxPauseCommunication" id="simxPauseCommunication"></a>simxPauseCommunication
</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Allows to temporarily halt the communication thread from sending data. This can be useful if you need to send several values to CoppeliaSim that should be received and evaluated at the same time. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxPauseCommunication(simxInt clientID,simxUChar pause)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>pause</strong>: whether the communication thread should pause or run normally.
</div>

<br>
<div>Usage example:</div>
<code class="hljs language-c++ simple">
simxPauseCommunication(clientID,1);
simxSetJointPosition(clientID,joint1Handle,joint1Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint2Handle,joint2Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint3Handle,joint3Value,simx_opmode_oneshot);
simxPauseCommunication(clientID,0);

// Above's 3 joints will be received and set on the CoppeliaSim side at the same time</code>



</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>0 in case of operation success.<a href="remoteApiConstants.htm#functionErrorCodes"></a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxPauseCommunication">Python</a>, <a href="remoteApiFunctionsJava.htm#simxPauseCommunication">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxPauseCommunication">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxPauseCommunication">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxPauseSimulation" id="simxPauseSimulation"></a>simxPauseSimulation 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a pause of a simulation. See also <a href="#simxStartSimulation">simxStartSimulation</a> and <a href="#simxStopSimulation">simxStopSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxPauseSimulation(simxInt clientID,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxPauseSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxPauseSimulation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxPauseSimulation">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxPauseSimulation">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxQuery" id="simxQuery"></a>simxQuery
</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Refer to <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.<br><br>Sends a query string to CoppeliaSim, and waits for a reply string. Query and reply strings can be accessed via string signals<a href="#simxGetFloatSignal"></a>. This function allows for instance to have a <a href="childScripts.htm">child script</a>, another remote API client or a <a href="rosInterfaces.htm">ROS node</a> handle special requests coming from this remote API client, then send a reply back.
<br>
<br>

<div>Usage example where a child script handles a request:</div>
<code class="hljs language-c++ simple">
// Following is the remote API client side:
simxUChar* replyData;
simxInt replySize;
if (simxQuery(clientID,"request","send me a 42",12,"reply",&replyData,&replySize,5000)==0)
    printf("The reply is: %s\n",replyData</code>

<br>
<code class="hljs language-lua simple">
-- This is the child script side. The child script is non-threaded and
-- following part executed at each simulation pass:
req=sim.getStringSignal("request")
if (req) then
    sim.clearStringSignal("request")
    if (req=="send me a 42") then
        sim.setStringSignal("reply","42\0") -- will be automatically cleared by the client
    end
end
</code>


</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxQuery(simxInt clientID,const simxChar* signalName,const simxUChar* signalValue,simxInt signalLength,const simxChar* retSignalName,simxUChar** retSignalValue,simxInt* retSignalLength,simxInt timeOutInMs)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal that contains the request string</div>
<div><strong>signalValue</strong>: pointer to the request string. </div>
<div><strong>signalLength</strong>: the size of the request string, since it may contain any data (also embedded zeros). </div>

<div><strong>retSignalName</strong>: name of the signal that contains the reply string</div>
<div><strong>retSignalValue</strong>: pointer to a pointer receiving the value of the reply string. The string pointer will remain valid until next remote API call</div>
<div><strong>retSignalLength</strong>: pointer to a location receiving the value of the reply string length, since it may contain any data (also embedded zeros). </div>
<div><strong>timeOutInMs</strong>: the maximum time in milliseconds that the function will wait for a reply.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxQuery">Python</a>, <a href="remoteApiFunctionsJava.htm#simxQuery">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxQuery">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxQuery">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxReadCollision" id="simxReadCollision"></a>simxReadCollision</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. see <a href="#simxCheckCollision">simxCheckCollision</a> instead.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadCollision(simxInt clientID,simxInt collisionObjectHandle,simxUChar* collisionState,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>collisionObjectHandle</strong>: handle of the collision object</div>
<div><strong>collisionState</strong>: a pointer to a value receiving the collision state (0: not colliding)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadCollision">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadCollision">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadCollision">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxReadCollision">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxReadDistance" id="simxReadDistance"></a>simxReadDistance</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. see <a href="#simxCheckDistance">simxCheckDistance</a> instead.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadDistance(simxInt clientID,simxInt distanceObjectHandle,simxFloat* minimumDistance,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>distanceObjectHandle</strong>: handle of the distance object</div>
<div><strong>minimumDistance</strong>: a pointer to a value receiving the minimum distance. If the distance object wasn't handled yet, the distance value will be larger than 1e36.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadDistance">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadDistance">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadDistance">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxReadDistance">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxReadForceSensor" id="simxReadForceSensor"></a>simxReadForceSensor 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the force and torque applied to a force sensor (filtered values are read), and its current state ('unbroken' or 'broken'). See also <a href="#simxGetJointForce">simxGetJointForce</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadForceSensor(simxInt clientID,simxInt forceSensorHandle,simxUChar* state,simxFloat* forceVector,simxFloat* torqueVector,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>forceSensorHandle</strong>: handle of the force sensor</div>
<div><strong>state</strong>: pointer to a byte value receiving the state of the force sensor. Can be nullptr</div>
<div class=tab>bit 0 set: force and torque data is available, otherwise it is not (yet) available (e.g. when not enough values are present for the filter)</div>
<div class=tab>bit 1 set: force sensor is broken, otherwise it is still intact ('unbroken')</div>
<div><strong>forceVector</strong>: pointer to 3 float values receiving the force vector. Can be nullptr</div>
<div><strong>torqueVector</strong>: pointer to 3 float values receiving the torque vector. Can be nullptr</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadForceSensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadForceSensor">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadForceSensor">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxReadForceSensor">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxReadProximitySensor" id="simxReadProximitySensor"></a>simxReadProximitySensor 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the state of a proximity sensor. This function doesn't perform detection, it merely reads the result from a previous call to <a href="regularApi/simHandleProximitySensor.htm">sim.handleProximitySensor</a> (sim.handleProximitySensor is called in the default main script). See also <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadProximitySensor(simxInt clientID,simxInt sensorHandle,simxUChar* detectionState,simxFloat* detectedPoint,simxInt* detectedObjectHandle,simxFloat* detectedSurfaceNormalVector,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the proximity sensor</div>
<div><strong>detectionState</strong>: pointer to a value receiving the detection state (0=no detection). Can be nullptr.</div>
<div><strong>detectedPoint</strong>: pointer to 3 values receiving the detected point coordinates (relative to the sensor reference frame). Can be nullptr.</div>
<div><strong>detectedObjectHandle</strong>: pointer to a value receiving the handle of the detected object. Can be nullptr.</div>
<div><strong>detectedSurfaceNormalVector</strong>: pointer to 3 values receiving the normal vector (normalized) of the detected surface. Relative to the sensor reference frame. Can be nullptr</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadProximitySensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadProximitySensor">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadProximitySensor">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxReadProximitySensor">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxReadStringStream" id="simxReadStringStream"></a>simxReadStringStream
</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Gets the value of a string signal, then clears it.  Useful to retrieve continuous data from the server. See also <a href="#simxWriteStringStream">simxWriteStringStream</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadStringStream(simxInt clientID,const simxChar* signalName,simxUChar** signalValue,simxInt* signalLength,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: pointer to a pointer receiving the value of the signal. The signal value will remain valid until next remote API call</div>
<div><strong>signalLength</strong>: pointer to a location receiving the value of the signal length, since it may contain any data (also embedded zeros). </div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls). simx_opmode_blocking is forbidden. Use a construction like following in order to continuously exchange data with CoppeliaSim:</div>

<br>
Remote API client side:
<code class="hljs language-c++ simple">
// Initialization phase:
simxUChar* signal;
simxInt sLength;
simxReadStringStream(cid,"toClient",&amp;signal,&amp;sLength,simx_opmode_streaming);

// while we are connected:
while (simxGetConnectionId(cid)!=-1)
{ 
  if (simxReadStringStream(cid,"toClient",&amp;signal,&amp;sLength,simx_opmode_buffer)==
      simx_return_ok)
  {
    // Data produced by the child script was retrieved! Send it back to the child script:
    simxWriteStringStream(cid,"fromClient",signal,sLength,simx_opmode_oneshot);
  }
}</code>

<br>
Server side (CoppeliaSim), from a child script:
<code class="hljs language-lua simple">
function sysCall_init()
    -- initialization phase:
    i=0
    lastReceived=-1
end

function sysCall_actuation()
    -- First send a stream of integers that count up:
    dat=sim.getStringSignal('toClient')
    if not dat then
        dat=''
    end
    dat=dat..sim.packInt32Table({i})
    i=i+1
    sim.setStringSignal('toClient',dat)

    -- Here receive the integer stream in return and check if each number is correct:
    dat=sim.getStringSignal('fromClient')
    if dat then
        sim.clearStringSignal('fromClient')
        dat=sim.unpackInt32Table(dat)
        for j=1,#dat,1 do
            if (dat[j]~=lastReceived+1) then
                print('Error')
            else
                io.write('.')
                lastReceived=dat[j]
            end
        end
    end
end</code>



</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadStringStream">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadStringStream">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadStringStream">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxReadStringStream">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxReadVisionSensor" id="simxReadVisionSensor"></a>simxReadVisionSensor 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Reads the state of a vision sensor. This function doesn't perform detection, it merely reads the result from a previous call to <a href="regularApi/simHandleVisionSensor.htm">sim.handleVisionSensor</a> (sim.handleVisionSensor is called in the default main script). See also <a href="#simxGetVisionSensorImage">simxGetVisionSensorImage</a> and <a href="#simxGetObjectGroupData">simxGetObjectGroupData</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxReadVisionSensor(simxInt clientID,simxInt sensorHandle,simxUChar* detectionState,simxFloat** auxValues,simxInt** auxValuesCount,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>detectionState</strong>: pointer to a byte that receives the detection state (i.e. the trigger state). Can be nullptr</div>
<div><strong>auxValues</strong>: by default CoppeliaSim returns one packet of 15 auxiliary values:the minimum of {intensity, red, green, blue, depth value}, the maximum of {intensity, red, green, blue, depth value}, and the average of {intensity, red, green, blue, depth value}. Additional packets can be appended in the <a href="visionCallbackFunctions.htm">vision callback function</a>. AuxValues can be nullptr if auxValuesCount is also nullptr. The user is in charge of releasing the auxValues buffer with <a href="#simxReleaseBuffer">simxReleaseBuffer</a>(*auxValues).</div>
<div><strong>auxValuesCount</strong>: contains information about the number of auxiliary value packets and packet sizes returned in auxValues. The first value is the number of packets, the second is the size of packet1, the third is the size of packet2, etc. Can be nullptr if auxValues is also nullptr. The user is in charge of releasing the auxValuesCount buffer with <a href="#simxReleaseBuffer">simxReleaseBuffer</a>(*auxValuesCount).</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_streaming (the first call) and simx_opmode_buffer (the following calls)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReadVisionSensor">Python</a>, <a href="remoteApiFunctionsJava.htm#simxReadVisionSensor">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxReadVisionSensor">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxReadVisionSensor">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxReleaseBuffer" id="simxReleaseBuffer"></a>simxReleaseBuffer </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Releases a buffer previously created with <a href="#simxCreateBuffer">simxCreateBuffer</a> or a buffer returned by a remote API function. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxVoid simxReleaseBuffer(simxUChar* buffer)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>buffer</strong>: buffer to be released</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxReleaseBuffer">Python</a>, <a href="remoteApiFunctionsMatlab.htm#simxReleaseBuffer">Matlab</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxRemoveModel" id="simxRemoveModel"></a>simxRemoveModel 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Removes a model from the scene. See also <a href="#simxRemoveObject">simxRemoveObject</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxRemoveModel(simxInt clientID,simxInt objectHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the model to remove (object should be flagged as <em>model base</em>).</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot (or simx_opmode_blocking)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxRemoveModel">Python</a>, <a href="remoteApiFunctionsJava.htm#simxRemoveModel">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxRemoveModel">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxRemoveModel">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxRemoveObject" id="simxRemoveObject"></a>simxRemoveObject 

</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Removes a scene object. See also <a href="#simxRemoveModel">simxRemoveModel</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis

</td> 
<td class=remApiTableRightCSyn>simxInt simxRemoveObject(simxInt clientID,simxInt objectHandle,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object to remove</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot (or simx_opmode_blocking)
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxRemoveObject">Python</a>, <a href="remoteApiFunctionsJava.htm#simxRemoveObject">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxRemoveObject">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxRemoveObject">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxRemoveUI" id="simxRemoveUI"></a>simxRemoveUI (DEPRECATED)</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetArrayParam" id="simxSetArrayParam"></a>simxSetArrayParam 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets 3 values of an <a href="apiConstants.htm#arrayParameters">array parameter</a>. See also <a href="#simxGetArrayParam">simxGetArrayParam</a>, <a href="#simxSetBoolParam">simxSetBoolParam</a>, <a href="#simxSetInt32Param">simxSetInt32Param</a> and <a href="#simxSetFloatParam">simxSetFloatParam</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetArrayParam(simxInt clientID,simxInt paramIdentifier,const simxFloat* paramValues,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#arrayParameters">array parameter identifier</a></div>
<div><strong>paramValues</strong>: the array containing the 3 values to set</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetArrayParam">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetArrayParam">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetArrayParam">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetArrayParam">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetBoolParam" id="simxSetBoolParam"></a>simxSetBoolParam 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a <a href="apiConstants.htm#booleanParameters">bool parameter</a>. See also <a href="#simxGetBoolParam">simxGetBoolParam</a>, <a href="#simxSetInt32Param">simxSetInt32Param</a>, <a href="#simxSetArrayParam">simxSetArrayParam</a> and <a href="#simxSetFloatParam">simxSetFloatParam</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetBoolParam(simxInt clientID,simxInt paramIdentifier,simxUChar paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#booleanParameters">bool parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetBoolParam">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetBoolParam">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetBoolParam">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetBoolParam">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetFloatParam" id="simxSetFloatParam"></a>simxSetFloatParam 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a <a href="apiConstants.htm#floatingParameters">floating point parameter</a>. See also <a href="#simxGetFloatParam">simxGetFloatParam</a>, <a href="#simxSetBoolParam">simxSetBoolParam</a>, <a href="#simxSetArrayParam">simxSetArrayParam</a> and <a href="#simxSetInt32Param">simxSetInt32Param</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetFloatParam(simxInt clientID,simxInt paramIdentifier,simxFloat paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: a <a href="apiConstants.htm#floatingParameters">floating parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetFloatParam">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetFloatParam">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetFloatParam">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetFloatParam">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetFloatSignal" id="simxSetFloatSignal"></a>simxSetFloatSignal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of a float signal. If that signal is not yet present, it is added. See also <a href="#simxGetFloatSignal">simxGetFloatSignal</a>, <a href="#simxClearFloatSignal">simxClearFloatSignal</a>, <a href="#simxSetInt32Signal">simxSetInt32Signal</a> and <a href="#simxSetStringSignal">simxSetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetFloatSignal(simxInt clientID,const simxChar* signalName,simxFloat signalValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetFloatSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetFloatSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetFloatSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetFloatSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetInt32Param" id="simxSetInt32Param"></a>simxSetInt32Param 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an <a href="apiConstants.htm#integerParameters">integer parameter</a>. See also <a href="#simxGetInt32Param">simxGetInt32Param</a>, <a href="#simxSetBoolParam">simxSetBoolParam</a>, <a href="#simxSetArrayParam">simxSetArrayParam</a> and <a href="#simxSetFloatParam">simxSetFloatParam</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetInt32Param(simxInt clientID,simxInt paramIdentifier,simxInt paramValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>paramIdentifier</strong>: an <a href="apiConstants.htm#integerParameters">integer parameter identifier</a></div>
<div><strong>paramValue</strong>: the parameter value</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetInt32Param">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetInt32Param">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetInt32Param">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetInt32Param">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetInt32Signal" id="simxSetInt32Signal"></a>simxSetInt32Signal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of an integer signal. If that signal is not yet present, it is added. See also <a href="#simxGetInt32Signal">simxGetInt32Signal</a>, <a href="#simxClearInt32Signal">simxClearInt32Signal</a>, <a href="#simxSetFloatSignal">simxSetFloatSignal</a> and <a href="#simxSetStringSignal">simxSetStringSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetInt32Signal(simxInt clientID,const simxChar* signalName,simxInt signalValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetInt32Signal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetInt32Signal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetInt32Signal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetInt32Signal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetJointMaxForce" id="simxSetJointMaxForce"></a>simxSetJointMaxForce 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the maximum force or torque that a joint can exert. This function has no effect when the joint is not dynamically enabled, or when it is a spherical joint. See also <a href="#simxGetJointMaxForce">simxGetJointMaxForce</a> and <a href="#simxGetJointForce">simxGetJointForce</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetJointMaxForce(simxInt clientID,simxInt jointHandle,simxFloat force,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>force</strong>: the maximum force or torque that the joint can exert
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetJointMaxForce">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointMaxForce">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointMaxForce">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointMaxForce">Octave</a></td> 
</tr> 
</table> 
<br>























<p class=subsectionBar>
<a name="simxSetJointPosition" id="simxSetJointPosition"></a>simxSetJointPosition 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic position of a joint. May have no effect depending on the joint mode. This function cannot be used with spherical joints (use <a href="#simxSetSphericalJointMatrix">simxSetSphericalJointMatrix</a> instead). If you want to set several joints that should be applied at the exact same time on the CoppeliaSim side, then use <a href="#simxPauseCommunication">simxPauseCommunication</a>. See also <a href="#simxGetJointPosition">simxGetJointPosition</a> and <a href="#simxSetJointTargetPosition">simxSetJointTargetPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetJointPosition(simxInt clientID,simxInt jointHandle,simxFloat position,simxInt operationMode)<br></td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>position</strong>: position of the joint (angular or linear value depending on the joint type)
</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetJointPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointPosition">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointPosition">Octave</a></td> 
</tr> 
</table> 
<br>











<p class=subsectionBar>
<a name="simxSetJointTargetPosition" id="simxSetJointTargetPosition"></a>simxSetJointTargetPosition 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the target position of a joint if the joint is in torque/force mode (also make sure that the joint's motor and position control are enabled). See also <a href="#simxSetJointPosition">simxSetJointPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetJointTargetPosition(simxInt clientID,simxInt jointHandle,simxFloat targetPosition,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>targetPosition</strong>: target position of the joint (angular or linear value depending on the joint type)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetJointTargetPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointTargetPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointTargetPosition">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointTargetPosition">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetJointTargetVelocity" id="simxSetJointTargetVelocity"></a>simxSetJointTargetVelocity 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic target velocity of a non-spherical joint. This command makes only sense when the joint mode is in torque/force mode: the dynamics functionality and the joint motor have to be enabled (position control should however be disabled)</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetJointTargetVelocity(simxInt clientID,simxInt jointHandle,simxFloat targetVelocity,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>targetVelocity</strong>: target velocity of the joint (linear or angular velocity depending on the joint-type)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetJointTargetVelocity">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetJointTargetVelocity">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetJointTargetVelocity">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetJointTargetVelocity">Octave</a></td> 
</tr> 
</table> 
<br>














<p class=subsectionBar>
<a name="simxSetModelProperty" id="simxSetModelProperty"></a>simxSetModelProperty 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the properties of a model. See also <a href="#simxGetModelProperty">simxGetModelProperty</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetModelProperty(simxInt clientID,simxInt objectHandle,simxInt prop,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>prop</strong>: a <a href="apiConstants.htm#modelProperties">model property value</a></div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetModelProperty">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetModelProperty">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetModelProperty">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetModelProperty">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetObjectFloatParameter" id="simxSetObjectFloatParameter"></a>simxSetObjectFloatParameter 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets a floating-point parameter of a object. See also <a href="#simxGetObjectFloatParameter">simxGetObjectFloatParameter</a> and <a href="#simxSetObjectIntParameter">simxSetObjectIntParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectFloatParameter(simxInt clientID,simxInt objectHandle,simxInt parameterID,simxFloat parameterValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to set. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: the desired value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectFloatParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectFloatParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectFloatParameter">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectFloatParameter">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetObjectIntParameter" id="simxSetObjectIntParameter"></a>simxSetObjectIntParameter 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an integer parameter of a object. See also <a href="#simxGetObjectIntParameter">simxGetObjectIntParameter</a> and <a href="#simxSetObjectFloatParameter">simxSetObjectFloatParameter</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectIntParameter(simxInt clientID,simxInt objectHandle,simxInt parameterID,simxInt parameterValue,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>parameterID</strong>: identifier of the parameter to set. See the <a href="objectParameterIDs.htm">list of all possible object parameter identifiers</a></div>
<div><strong>parameterValue</strong>: the desired value of the parameter</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectIntParameter">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectIntParameter">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectIntParameter">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectIntParameter">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetObjectOrientation" id="simxSetObjectOrientation"></a>simxSetObjectOrientation 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the orientation (<a href="eulerAngles.htm">Euler angles</a>) of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before). See also <a href="#simxGetObjectOrientation">simxGetObjectOrientation</a>, <a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a> and <a href="#simxSetObjectPosition">simxSetObjectPosition</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectOrientation(simxInt clientID,simxInt objectHandle,simxInt relativeToObjectHandle,const simxFloat* eulerAngles,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the orientation is specified. Specify -1 to set the absolute orientation, sim_handle_parent to set the orientation relative to the object's parent, or an object handle relative to whose reference frame the orientation is specified.</div>
<div><strong>eulerAngles</strong>: Euler angles (alpha, beta and gamma)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectOrientation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectOrientation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectOrientation">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectOrientation">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetObjectParent" id="simxSetObjectParent"></a>simxSetObjectParent 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets an object's parent object. See also <a href="#simxGetObjectParent">simxGetObjectParent</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectParent(simxInt clientID,simxInt objectHandle,simxInt parentObject,simxUChar keepInPlace,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object that will become child of the parent object.  Can be combined with <a href="apiConstants.htm#specialHandleFlags">sim_handleflag_assembly</a>, if the two objects can be assembled via a predefined assembly transformation (refer to the <strong>assembling</strong> option in the <a href="commonPropertiesDialog.htm">object common properties</a>). In that case, <strong>parentObject</strong> can't be -1, and <strong>keepInPlace</strong> should be set to false.</div>
<div><strong>parentObject</strong>: handle of the object that will become parent, or -1 if the object should become parentless</div>
<div><strong>keepInPlace</strong>: indicates whether the object's absolute position and orientation should stay same</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot or simx_opmode_blocking depending on the intent
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectParent">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectParent">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectParent">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectParent">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetObjectPosition" id="simxSetObjectPosition"></a>simxSetObjectPosition 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the position of an object. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling  <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before). See also <a href="#simxGetObjectPosition">simxGetObjectPosition</a>, <a href="#simxSetObjectQuaternion">simxSetObjectQuaternion</a> and <a href="#simxSetObjectOrientation">simxSetObjectOrientation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectPosition(simxInt clientID,simxInt objectHandle,simxInt relativeToObjectHandle,const simxFloat* position,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the position is specified. Specify -1 to set the absolute position, sim_handle_parent to set the position relative to the object's parent, or an object handle relative to whose reference frame the position is specified.</div>
<div><strong>position</strong>: the position values (x, y and z)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectPosition">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectPosition">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectPosition">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectPosition">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetObjectQuaternion" id="simxSetObjectQuaternion"></a>simxSetObjectQuaternion 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the orientation of an object, as quaternion. Dynamically simulated objects will implicitely be reset before the command is applied (i.e. similar to calling  <a href="regularApi/simResetDynamicObject.htm">sim.resetDynamicObject</a> just before). See also <a href="#simxGetObjectQuaternion">simxGetObjectQuaternion</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectQuaternion(simxInt clientID,simxInt objectHandle,simxInt relativeToObjectHandle,const simxFloat* quat,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandle</strong>: handle of the object</div>
<div><strong>relativeToObjectHandle</strong>: indicates relative to which reference frame the quaternion is specified. Specify -1 to set the absolute quaternion, sim_handle_parent to set the quaternion relative to the object's parent, or an object handle relative to whose reference frame the quaternion is specified.</div>
<div><strong>quat</strong>: the quaternion values (x, y, z, w)</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectQuaternion">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectQuaternion">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectQuaternion">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectQuaternion">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxSetObjectSelection" id="simxSetObjectSelection"></a>simxSetObjectSelection </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the selection state for objects. See also <a href="#simxGetObjectSelection">simxGetObjectSelection</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetObjectSelection(simxInt clientID,const simxInt* objectHandles,simxInt objectCount,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>objectHandles</strong>: an array of object handles</div>
<div><strong>objectCount</strong>: the number of elements in the array</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot or simx_opmode_blocking depending on the intent.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetObjectSelection">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetObjectSelection">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetObjectSelection">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetObjectSelection">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetSphericalJointMatrix" id="simxSetSphericalJointMatrix"></a>simxSetSphericalJointMatrix 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the intrinsic orientation matrix of a spherical joint object. This function cannot be used with non-spherical joints (use <a href="#simxSetJointPosition">simxSetJointPosition</a> instead). See also <a href="#simxGetJointMatrix">simxGetJointMatrix</a>..</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetSphericalJointMatrix(simxInt clientID,simxInt jointHandle,simxFloat* matrix,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>jointHandle</strong>: handle of the joint</div>
<div><strong>matrix</strong>: pointer to 12 simxFloat values. See the regular API equivalent function for details</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function are simx_opmode_oneshot or 
simx_opmode_streaming
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetSphericalJointMatrix">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetSphericalJointMatrix">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetSphericalJointMatrix">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetSphericalJointMatrix">Octave</a></td> 
</tr> 
</table> 
<br>











<p class=subsectionBar>
<a name="simxSetStringSignal" id="simxSetStringSignal"></a>simxSetStringSignal 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the value of a string signal. If that signal is not yet present, it is added. See also <a href="#simxWriteStringStream">simxWriteStringStream</a>, <a href="#simxGetStringSignal">simxGetStringSignal</a>, <a href="#simxClearStringSignal">simxClearStringSignal</a>, <a href="#simxSetInt32Signal">simxSetInt32Signal</a> and <a href="#simxSetFloatSignal">simxSetFloatSignal</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetStringSignal(simxInt clientID,const simxChar* signalName,const simxUChar* signalValue,simxInt signalLength,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValue</strong>: value of the signal (which may contain any value, including embedded zeros)</div>
<div><strong>signalLength</strong>: size of the signalValue string. </div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetStringSignal">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetStringSignal">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetStringSignal">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetStringSignal">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetUIButtonLabel" id="simxSetUIButtonLabel"></a>simxSetUIButtonLabel (DEPRECATED)
</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetUIButtonProperty" id="simxSetUIButtonProperty"></a>simxSetUIButtonProperty (DEPRECATED)
</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetUISlider" id="simxSetUISlider"></a>simxSetUISlider (DEPRECATED)
</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>DEPRECATED. Use the <a href="customUIPlugin.htm">Qt-based custom user interfaces</a>, via <a href="#simxCallScriptFunction">simxCallScriptFunction</a> instead.</td>
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxSetVisionSensorImage" id="simxSetVisionSensorImage"></a>simxSetVisionSensorImage 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sets the image of a vision sensor (and applies any image processing, if enabled). Make sure the vision sensor is flagged as <strong>use external image</strong>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSetVisionSensorImage(simxInt clientID,simxInt sensorHandle,simxUChar* image,simxInt bufferSize,simxUChar options,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>sensorHandle</strong>: handle of the vision sensor</div>
<div><strong>image</strong>: pointer tothe image data</div>
<div><strong>bufferSize</strong>: size of the image data</div>
<div><strong>options</strong>: image options, bit-coded:</div>
<div class=tab>bit0 set: each image pixel is a byte (greyscale image), otherwise each image pixel is a rgb byte-triplet</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSetVisionSensorImage">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSetVisionSensorImage">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSetVisionSensorImage">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSetVisionSensorImage">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxStart" id="simxStart"></a>simxStart</p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Starts a communication thread with the server (i.e. CoppeliaSim). A same client may start several communication threads (but only one communication thread for a given IP and port). This should be the very first remote API function called on the client side. Make sure to start an appropriate remote API server service on the server side, that will wait for a connection. See also <a href="#simxFinish">simxFinish</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxStart(const simxChar* connectionAddress,simxInt connectionPort,simxUChar waitUntilConnected,simxUChar doNotReconnectOnceDisconnected,simxInt timeOutInMs,simxInt commThreadCycleInMs)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>connectionAddress</strong>: the ip address where the server is located (i.e. CoppeliaSim)</div>
<div><strong>connectionPort</strong>: the port number where to connect. Specify a negative port number in order to use shared memory, instead of socket communication.</div>
<div><strong>waitUntilConnected</strong>: if different from zero, then the function blocks until connected (or timed out).</div>
<div><strong>doNotReconnectOnceDisconnected</strong>: if different from zero, then the communication thread will not attempt a second connection if a connection was lost.</div>
<div><strong>timeOutInMs</strong>:</div>
<div class=tab> if positive: the connection time-out in milliseconds for the first connection attempt. In that case, the time-out for blocking function calls is 5000 milliseconds.</div>
<div class=tab> if negative: its positive value is the time-out for blocking function calls. In that case, the connection time-out for the first connection attempt is 5000 milliseconds.</div>
<div><strong>commThreadCycleInMs</strong>: indicates how often data packets are sent back and forth. Reducing this number improves responsiveness, and a default value of 5 is recommended.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>the client ID, or -1 if the connection to the server was not possible (i.e. a timeout was reached). A call to simxStart should always be followed at the end with a call to <a href="#simxFinish">simxFinish</a> if simxStart didn't return -1</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxStart">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStart">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxStart">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxStart">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxStartSimulation" id="simxStartSimulation"></a>simxStartSimulation 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a start of a simulation (or a resume of a paused simulation). This function is only executed by <a href="remoteApiServerSide.htm#continuousRemoteApiService">continuous remote API server services</a>. See also <a href="#simxPauseSimulation">simxPauseSimulation</a> and <a href="#simxStopSimulation">simxStopSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxStartSimulation(simxInt clientID,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxStartSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStartSimulation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxStartSimulation">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxStartSimulation">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar>
<a name="simxStopSimulation" id="simxStopSimulation"></a>simxStopSimulation 
</p>


<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Requests a stop of the running simulation. See also <a href="#simxStartSimulation">simxStartSimulation</a> and <a href="#simxPauseSimulation">simxPauseSimulation</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxStopSimulation(simxInt clientID,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation modes for this function is simx_opmode_oneshot.
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxStopSimulation">Python</a>, <a href="remoteApiFunctionsJava.htm#simxStopSimulation">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxStopSimulation">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxStopSimulation">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxSynchronous" id="simxSynchronous"></a>simxSynchronous </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Enables or disables the stepped  mode for the remote API server service that the client is connected to. The function is blocking. While in stepped mode, the client application is in charge of triggering the next simulation step. Only pre-enabled remote API server services will successfully execute this function. See also <a href="#simxSynchronousTrigger">simxSynchronousTrigger</a> and <a href="remoteApiModusOperandi.htm#synchronous">this section</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSynchronous(simxInt clientID,simxUChar enable)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>enable</strong>: the enable state of the stepped mode</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSynchronous">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSynchronous">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSynchronous">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSynchronous">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxSynchronousTrigger" id="simxSynchronousTrigger"></a>simxSynchronousTrigger </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Sends a synchronization  trigger signal to the server. The function is blocking. The server needs to be previously enabled for stepped operation via the <a href="#simxSynchronous">simxSynchronous</a> function. The trigger signal will inform CoppeliaSim to execute the next simulation step (i.e. to call <a href="regularApi/simHandleMainScript.htm">simHandleMainScript</a>). While in stepped  mode, the client application is in charge of triggering the next simulation step, otherwise simulation will stall. See also <a href="remoteApiModusOperandi.htm#synchronous">this section</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxSynchronousTrigger(simxInt clientID)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxSynchronousTrigger">Python</a>, <a href="remoteApiFunctionsJava.htm#simxSynchronousTrigger">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxSynchronousTrigger">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxSynchronousTrigger">Octave</a></td> 
</tr> 
</table> 
<br>













<p class=subsectionBar><a name="simxTransferFile" id="simxTransferFile"></a>simxTransferFile </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Allows transferring a file from the client to the server. This function is used by several other functions internally (e.g. <a href="#simxLoadModel">simxLoadModel</a>). See also <a href="#simxEraseFile">simxEraseFile</a>. This is a remote API helper function.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxTransferFile(simxInt clientID,const simxChar* filePathAndName,const simxChar* fileName_serverSide,simxInt timeOut,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>filePathAndName</strong>: the local file name and path (i.e. on the client side)</div>
<div><strong>fileName_serverSide</strong>: a file name under which the transferred file will be saved on the server side. For now, do not specify a path (the file will be saved in the remote API plugin directory)</div>
<div><strong>timeOut</strong>: a timeout value in milliseconds</div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_blocking
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxTransferFile">Python</a>, <a href="remoteApiFunctionsJava.htm#simxTransferFile">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxTransferFile">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxTransferFile">Octave</a></td> 
</tr> 
</table> 
<br>










<p class=subsectionBar>
<a name="simxWriteStringStream" id="simxWriteStringStream"></a>simxWriteStringStream </p>
<table class=apiTable>
<tr class=apiTableTr> 
<td class=apiTableLeftDescr>
Description 
</td> 
<td class=apiTableRightDescr>Appends a string to a string signal. If that signal is not yet present, it is added. See also <a href="#simxReadStringStream">simxReadStringStream</a>.</td>
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCSyn>
C/C++<br>synopsis
</td> 
<td class=remApiTableRightCSyn>simxInt simxWriteStringStream(simxInt clientID,const simxChar* signalName,const simxUChar* signalValueToAppend,simxInt signalLength,simxInt operationMode)</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCParam>C/C++<br>parameters</td> 
<td class=remApiTableRightCParam>
<div><strong>clientID</strong>: the client ID. refer to <a href="#simxStart">simxStart</a>.</div>
<div><strong>signalName</strong>: name of the signal</div>
<div><strong>signalValueToAppend</strong>: value to append to the signal. That value may contain any value, including embedded zeros.</div>
<div><strong>signalLength</strong>: size of the signalValueToAppend string. </div>
<div><strong>operationMode</strong>: a <a href="remoteApiConstants.htm#operationModes">remote API function operation mode</a>. Recommended operation mode for this function is simx_opmode_oneshot
</div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftCRet>
C/C++<br>return value
</td> 
<td class=remApiTableRightCRet>
<div>a <a href="remoteApiConstants.htm#functionErrorCodes">remote API function return code</a></div>
</td> 
</tr> 
<tr class=apiTableTr> 
<td class=remApiTableLeftLanguages>
Other languages
</td> 
<td class=remApiTableRightLanguages>
<a href="remoteApiFunctionsPython.htm#simxWriteStringStream">Python</a>, <a href="remoteApiFunctionsJava.htm#simxWriteStringStream">Java</a>, <a href="remoteApiFunctionsMatlab.htm#simxWriteStringStream">Matlab</a>, <a href="remoteApiFunctionsOctave.htm#simxWriteStringStream">Octave</a></td> 
</tr> 
</table> 
<br>





















<br>
<br>
</td>
</tr>
</table> 
</div>  
  
  
</body>

</html>
